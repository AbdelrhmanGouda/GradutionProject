Index: app/src/main/java/com/example/graduationproject/Fragments/ChangePasswordFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Fragments;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.graduationproject.R;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.EmailAuthProvider;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\npublic class ChangePasswordFragment extends Fragment implements View.OnClickListener {\r\n\r\n  EditText currentPassword,newPassword,confirmPassword;\r\n\r\n  Button changePasswordBtn;\r\n  FirebaseAuth auth;\r\n  String id ,oldPassword,currentPasswordTxt,newPasswordTxt,confirmPasswordTxt;\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_change_password, container, false);\r\n        currentPassword=view.findViewById(R.id.current_password);\r\n        newPassword=view.findViewById(R.id.new_password);\r\n        confirmPassword=view.findViewById(R.id.confirm_new_password);\r\n        changePasswordBtn=view.findViewById(R.id.change_password_btn);\r\n        auth=FirebaseAuth.getInstance();\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        id = firebaseUser.getUid();\r\n        dataBase();\r\n        changePasswordBtn.setOnClickListener(this);\r\n\r\n        return view;\r\n    }\r\n\r\n    private void dataBase(){\r\n        Query query = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot){\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            oldPassword=snapshot.child(\"pass\").getValue(String.class);\r\n                            Log.i(oldPassword, \"old password: \");\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    // method to reset the password with a link sent to the email\r\n    /*\r\n    private void resetPassword(){\r\n        String email = confirmPassword.getText().toString();\r\n        if (email.isEmpty()){\r\n            confirmPassword.setError(\"Email is required!\");\r\n            confirmPassword.requestFocus();\r\n        }\r\n        if (!Patterns.EMAIL_ADDRESS.matcher(email).matches()){\r\n            confirmPassword.setError(\"Enter a valid email please!\");\r\n            confirmPassword.requestFocus();\r\n        }\r\n\r\n        auth.sendPasswordResetEmail(email).addOnCompleteListener(new OnCompleteListener<Void>() {\r\n            @Override\r\n            public void onComplete(@NonNull Task<Void> task) {\r\n                if (task.isSuccessful()){\r\n                    Toast.makeText(getActivity(), \"check your email to reset your password\", Toast.LENGTH_SHORT).show();\r\n                }else {\r\n                    Toast.makeText(getActivity(), \"try again! something wrong happened!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n     */\r\n    /*\r\n    private void changePassword(){\r\n\r\n        currentPasswordTxt=currentPassword.getText().toString();\r\n        newPasswordTxt=newPassword.getText().toString();\r\n        confirmPasswordTxt=confirmPassword.getText().toString();\r\n        Log.i(currentPasswordTxt, \"lllllllllllllllllllllllllll\");\r\n        Log.i(oldPassword, \"hhhhhhhhhhhhhhhhhhhhhhhhhhhh\");\r\n        if (currentPasswordTxt.equals(oldPassword) ){\r\n            Log.i(currentPasswordTxt, \"kkkkkkkkkkkkkkkkk\");\r\n            Log.i(oldPassword, \"ppppppppppppp\");\r\n\r\n            if (newPasswordTxt.equals(confirmPasswordTxt)){\r\n                Query query1 =FirebaseDatabase.getInstance().getReference().child(\"Users\").child(FirebaseAuth.getInstance().getCurrentUser().getUid());\r\n                query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n                    @Override\r\n                    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                        if(snapshot!= null){\r\n                            if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                                for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                                    snapshot.getRef().child(\"pass\").setValue(newPasswordTxt);\r\n                                    Toast.makeText(getContext(), \"Password is changed\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            }\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                    }\r\n                });\r\n            }else {\r\n                Toast.makeText(getContext(), \"You must enter the same password to confirm it \", Toast.LENGTH_LONG).show();\r\n            }\r\n        }else {\r\n            Toast.makeText(getContext(), \"Enter valid password and try again  \", Toast.LENGTH_LONG).show();\r\n            Log.i(currentPasswordTxt, \"nnnnnnnnnnnnn\");\r\n            Log.i(oldPassword, \"mmmmmmmmmmmmmmmmm\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n     */\r\n\r\n    private void changePasswordNew(){\r\n        oldPassword=currentPassword.getText().toString();\r\n        newPasswordTxt=newPassword.getText().toString();\r\n        confirmPasswordTxt=confirmPassword.getText().toString();\r\n        final FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        AuthCredential authCredential = EmailAuthProvider.getCredential(user.getEmail(),oldPassword);\r\n        user.reauthenticate(authCredential).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void aVoid) {\r\n                user.updatePassword(newPasswordTxt).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast.makeText(getActivity(), \"Password Is Updated...\", Toast.LENGTH_SHORT).show();\r\n                        currentPassword.getText().clear();\r\n                        newPassword.getText().clear();\r\n                        confirmPassword.getText().clear();\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n\r\n                        Toast.makeText(getActivity(), \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(getActivity(), \"\"+e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n    @Override\r\n    public void onClick(View view) {\r\n\r\n       // resetPassword();\r\n      //  changePassword();\r\n        changePasswordNew();\r\n\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Fragments/ChangePasswordFragment.java	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/java/com/example/graduationproject/Fragments/ChangePasswordFragment.java	(date 1622869117853)
@@ -50,7 +50,7 @@
     }
 
     private void dataBase(){
-        Query query = FirebaseDatabase.getInstance().getReference().child("Users").child(FirebaseAuth.getInstance().getCurrentUser().getUid());
+        Query query = FirebaseDatabase.getInstance().getReference().child("Users").child(id);
         query.addListenerForSingleValueEvent(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot){
Index: app/src/main/java/com/example/graduationproject/Fragments/EditProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Fragments;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.example.graduationproject.R;\r\nimport com.example.graduationproject.Sign.User;\r\nimport com.example.graduationproject.Sign.Utils;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.UserProfileChangeRequest;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.database.annotations.Nullable;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class EditProfileFragment extends Fragment implements View.OnClickListener {\r\n    private ImageView editImage;\r\n    private EditText editName, editEmail, editPhone;\r\n    private Button updateBtn;\r\n    private TextView editPassword;\r\n    private FloatingActionButton floatingEditImageBtn;\r\n    public FirebaseAuth auth ;\r\n    String userImage,userName,userEmail,userLocation,userPhone;\r\n\r\n    /////////////osama///////////\r\n    public FirebaseAuth mAuth ;\r\n    public Uri generatedFilePathURI;\r\n    public FirebaseUser firebaseUser;\r\n    public FirebaseDatabase database;\r\n    public DatabaseReference myRef;\r\n    DatabaseReference databaseReference;\r\n    Uri image_uri;\r\n    // instance for firebase storage and StorageReference\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    User user = new User();\r\n    String uid;\r\n    private static Spinner editLocation;\r\n    //////////////////////////////////\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_edit_profile, container, false);\r\n        setHasOptionsMenu(false);\r\n        editImage =view.findViewById(R.id.edit_profile_image);\r\n        floatingEditImageBtn=view.findViewById(R.id.floating_edit_image_btn);\r\n        editName =view.findViewById(R.id.edit_name);\r\n        editEmail =view.findViewById(R.id.edit_email);\r\n        editLocation =view.findViewById(R.id.spinner);\r\n        editPhone =view.findViewById(R.id.edit_phone);\r\n        updateBtn =view.findViewById(R.id.edit_profile_update_btn);\r\n        editPassword=view.findViewById(R.id.edit_password_txt);\r\n        editPassword.setOnClickListener(this);\r\n        auth = FirebaseAuth.getInstance();\r\n        mAuth = auth;\r\n\r\n        //create a list of items for the spinner.\r\n        String[] items = new String[]{\"Choose Your Location\", \"Alexandria\", \"Aswan\", \"Asyut\", \"Beheira\", \"Beni Suef\", \"Cairo\", \"Dakahlia\", \"Damietta\", \"Faiyum\", \"Gharbia\", \"Giza\", \"Ismailia\", \"Kafr El Sheikh\", \"Luxor\", \"Matruh\", \"Minya\", \"Monufia\", \"New Valley\", \"North Sinai\", \"Port Said\", \"Qalyubia\", \"Qena\", \"Red Sea\", \"Sharqia\", \"Sohag\", \"South Sinai\", \"Suez\"};\r\n\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_dropdown_item, items);\r\n        editLocation.setAdapter(adapter);\r\n\r\n\r\n        dataBase();\r\n        setListeners();\r\n\r\n\r\n        updateBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                checkValidation();\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n    private void dataBase() {\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        final String id = firebaseUser.getUid();\r\n\r\n        Query query = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(id);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            userName=snapshot.child(\"name\").getValue(String.class);\r\n                            userImage=snapshot.child(\"uri\").getValue(String.class);\r\n                            userEmail=snapshot.child(\"email\").getValue(String.class);\r\n                            userLocation=snapshot.child(\"location\").getValue(String.class);\r\n                            userPhone=snapshot.child(\"phone\").getValue(String.class);\r\n                            editName.setText(userName);\r\n                            editEmail.setText(userEmail);\r\n                            editLocation.setSelection(((ArrayAdapter<String>)editLocation.getAdapter()).getPosition(userLocation));\r\n                            editPhone.setText(userPhone);\r\n                            Picasso.get().load(userImage).into(editImage);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateData() {\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        final String id = firebaseUser.getUid();\r\n        final String name = editName.getText().toString();\r\n        final String email = editEmail.getText().toString();\r\n        final String location = editLocation.getSelectedItem().toString();\r\n        final String phone = editPhone.getText().toString();\r\n        Query query = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(id);\r\n        uploadImage();\r\n        userProfile(name);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            snapshot.getRef().child(\"name\").setValue(name);\r\n                            snapshot.getRef().child(\"email\").setValue(email);\r\n                            snapshot.getRef().child(\"location\").setValue(location);\r\n                            snapshot.getRef().child(\"phone\").setValue(phone);\r\n                            Toast.makeText(getContext(), \"update\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n    private void checkValidation() {\r\n\r\n        // Get all edittext texts\r\n        String getFullName = editName.getText().toString();\r\n        String getEmailId = editEmail.getText().toString();\r\n        String getMobileNumber = editPhone.getText().toString();\r\n        String getLocation = editLocation.getSelectedItem().toString();\r\n        // Pattern match for email id\r\n        Pattern p = Pattern.compile(Utils.regEx);\r\n        Matcher m = p.matcher(getEmailId);\r\n\r\n        // Check if all strings are null or not\r\n        if (getFullName.equals(\"\") || getFullName.length() == 0\r\n                || getEmailId.equals(\"\") || getEmailId.length() == 0\r\n                || getMobileNumber.equals(\"\") || getMobileNumber.length() == 0\r\n                || getLocation.equals(\"Choose Your Location\") || editLocation.getSelectedItemPosition() == 0\r\n           ) {\r\n            Toast.makeText(getContext(), \"All fields are required.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n        // Check if email id valid or not\r\n        else if (!m.find()) {\r\n            Toast.makeText(getContext(), \"Your Email Id is Invalid.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else if (editPhone.length() != 11)\r\n        {\r\n            Toast.makeText(getContext(), \"Mobile should be 11 Numbers\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else {\r\n            updateData();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ////////////////////// osama ///////////////////////////\r\n\r\n\r\n    // Set Listeners\r\n    private void setListeners() {\r\n        floatingEditImageBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                SelectProfilePic();\r\n            }\r\n        });\r\n    }\r\n\r\n    // UploadImage method\r\n    public void uploadImage() {\r\n        if (image_uri != null) {\r\n\r\n            // Code for showing progressDialog while uploading\r\n            final ProgressDialog progressDialog\r\n                    = new ProgressDialog(getActivity());\r\n            progressDialog.setTitle(\"Uploading...\");\r\n            progressDialog.show();\r\n            FirebaseUser firebaseUser =mAuth.getCurrentUser();\r\n            uid = firebaseUser.getUid();\r\n\r\n            // Defining the child of storageReference\r\n            storageReference = FirebaseStorage.getInstance().getReference();\r\n            final StorageReference ref\r\n                    = storageReference\r\n                    .child(\"images/\").child(uid + \"/UserImage\");\r\n\r\n            // adding listeners on upload\r\n            // or failure of image\r\n            generatedFilePathURI = image_uri;\r\n            Log.d(\"urlll1\", generatedFilePathURI + \"\");\r\n            UploadTask uploadTask = ref.putFile(image_uri);\r\n            ref.putFile(image_uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(\r\n                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                    // Image uploaded successfully\r\n                    // Dismiss dialog\r\n                    ref.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            //Now play with downloadPhotoUrl\r\n                            //Store data into Firebase Realtime Database\r\n                            generatedFilePathURI = uri;\r\n                            Log.d(\"urlll\", generatedFilePathURI + \"\");\r\n                            imageToRealFirebase(generatedFilePathURI);\r\n\r\n\r\n                        }\r\n                    });\r\n                                   /* uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n                                        @Override\r\n                                        public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n                                            if (!task.isSuccessful()) {\r\n                                                throw task.getException();\r\n\r\n                                            }\r\n                                            // Continue with the task to get the download URL\r\n                                            return ref.getDownloadUrl();\r\n                                        }\r\n                                    }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<Uri> task) {\r\n                                            if (task.isSuccessful()) {\r\n\r\n                                                generatedFilePathURI = task.getResult();\r\n                                                Log.d(\"urlll\",generatedFilePathURI + \"\");\r\n\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                    */\r\n                    progressDialog.dismiss();\r\n                    Toast.makeText(getActivity(), \"Image Uploaded!!\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                }\r\n            })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n\r\n                            // Error, Image not uploaded\r\n                            progressDialog.dismiss();\r\n                            Toast\r\n                                    .makeText(getActivity(),\r\n                                            \"Failed \" + e.getMessage(),\r\n                                            Toast.LENGTH_SHORT)\r\n                                    .show();\r\n                        }\r\n                    })\r\n                    .addOnProgressListener(\r\n                            new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n\r\n                                // Progress Listener for loading\r\n                                // percentage on the dialog box\r\n                                @Override\r\n                                public void onProgress(\r\n                                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                                    double progress\r\n                                            = (100.0\r\n                                            * taskSnapshot.getBytesTransferred()\r\n                                            / taskSnapshot.getTotalByteCount());\r\n                                    progressDialog.setMessage(\r\n                                            \"Uploaded \"\r\n                                                    + (int) progress + \"%\");\r\n                                }\r\n                            });\r\n        }\r\n    }\r\n\r\n\r\n    /*-------- Below Code is for selecting image from galary or camera -----------*/\r\n    private void SelectProfilePic() {\r\n        final CharSequence[] options = {\"Take Photo\", \"Choose from Gallery\", \"Cancel\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n        builder.setTitle(\"Add Photo!\");\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                        if (getActivity().checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED ||\r\n                                getActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_DENIED) {\r\n                            String[] permission = {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                            requestPermissions(permission, 1000);\r\n                        } else {\r\n                            openCamera();\r\n                        }\r\n                    } else {\r\n                        openCamera();\r\n                    }\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n\r\n                    Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);\r\n\r\n                    startActivityForResult(intent, 2);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n\r\n                    dialog.dismiss();\r\n\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n\r\n    }\r\n\r\n    private void openCamera() {\r\n        ContentValues values = new ContentValues();\r\n        values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n        values.put(MediaStore.Images.Media.DESCRIPTION, \"From Camera\");\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n\r\n        //Camera intent\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n        startActivityForResult(takePictureIntent, 1);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch (requestCode) {\r\n            case 1000:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    openCamera();\r\n                } else {\r\n                    //permisiion from pop up was denied.\r\n                    Toast.makeText(getActivity(), \"Permission Denied...\", Toast.LENGTH_LONG).show();\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        // Result code is RESULT_OK only if the user selects an Image\r\n        if (resultCode == Activity.RESULT_OK) {\r\n            switch (requestCode) {\r\n                case 1:\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(editImage);\r\n                    //Toast.makeText(getActivity(),\"case 1 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case 2:\r\n                    //data.getData returns the content URI for the selected Image\r\n                    image_uri = data.getData();\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(editImage);\r\n                    //Toast.makeText(getActivity(),\"case 2 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    ///////////////////save image url in realtime database /////////////\r\n    public void imageToRealFirebase(Uri uri) {\r\n        user.setUri(uri);\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        final String uid = firebaseUser.getUid();\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        myRef = database.getReference(\"Users\").child(uid);\r\n        myRef.child(\"uri\").setValue(user.getUri().toString());\r\n    }\r\n\r\n    /*----------For saving image and user name in Auth Firebase Database-------*/\r\n    public void userProfile(String name) {\r\n        firebaseUser = mAuth.getCurrentUser();\r\n        if (firebaseUser != null) {\r\n            UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()\r\n                    .setDisplayName(name).setPhotoUri(generatedFilePathURI).build();\r\n            firebaseUser.updateProfile(profileUpdates).addOnCompleteListener(getActivity(), new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n      AppCompatActivity activity =  (AppCompatActivity)view.getContext();\r\n        activity.getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new ChangePasswordFragment()).commit();\r\n\r\n    }\r\n\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Fragments/EditProfileFragment.java	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/java/com/example/graduationproject/Fragments/EditProfileFragment.java	(date 1622858953211)
@@ -4,13 +4,20 @@
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
+import android.content.ContentUris;
 import android.content.ContentValues;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.pm.PackageManager;
+import android.database.Cursor;
+import android.graphics.Bitmap;
+import android.graphics.Matrix;
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Environment;
+import android.provider.DocumentsContract;
 import android.provider.MediaStore;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -26,10 +33,12 @@
 
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
+import androidx.exifinterface.media.ExifInterface;
 import androidx.fragment.app.Fragment;
 
 import com.bumptech.glide.Glide;
 import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.bumptech.glide.request.RequestOptions;
 import com.example.graduationproject.R;
 import com.example.graduationproject.Sign.User;
 import com.example.graduationproject.Sign.Utils;
@@ -54,9 +63,14 @@
 import com.google.firebase.storage.UploadTask;
 import com.squareup.picasso.Picasso;
 
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.IOException;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+
+
 public class EditProfileFragment extends Fragment implements View.OnClickListener {
     private ImageView editImage;
     private EditText editName, editEmail, editPhone;
@@ -246,6 +260,8 @@
                     = new ProgressDialog(getActivity());
             progressDialog.setTitle("Uploading...");
             progressDialog.show();
+            progressDialog.setCanceledOnTouchOutside(false);
+            progressDialog.setCancelable(false);
             FirebaseUser firebaseUser =mAuth.getCurrentUser();
             uid = firebaseUser.getUid();
 
@@ -258,9 +274,20 @@
             // adding listeners on upload
             // or failure of image
             generatedFilePathURI = image_uri;
+            byte[] data = new byte[0];
+            try {
+                Bitmap bmp = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), image_uri);
+                bmp = modifyOrientation(bmp,getPath(getContext(),image_uri));
+                ByteArrayOutputStream baos = new ByteArrayOutputStream();
+                bmp.compress(Bitmap.CompressFormat.JPEG, 50, baos);
+                data = baos.toByteArray();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+
             Log.d("urlll1", generatedFilePathURI + "");
-            UploadTask uploadTask = ref.putFile(image_uri);
-            ref.putFile(image_uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+            UploadTask uploadTask = ref.putBytes(data);//ref.putFile(image_uri);
+            ref.putBytes(data).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                 @Override
                 public void onSuccess(
                         UploadTask.TaskSnapshot taskSnapshot) {
@@ -412,26 +439,33 @@
         if (resultCode == Activity.RESULT_OK) {
             switch (requestCode) {
                 case 1:
+                    //camera
                     //user_profile.setImageURI(image_uri);
                     Glide.with(getActivity())
                             .load(image_uri)
                             .centerCrop()
+                            .fitCenter()
+                            //.apply(new RequestOptions().override(1155, 866))
                             .diskCacheStrategy(DiskCacheStrategy.NONE)
                             .skipMemoryCache(true)
                             .placeholder(R.drawable.person_24)
                             .into(editImage);
                     //Toast.makeText(getActivity(),"case 1 " ,Toast.LENGTH_SHORT).show();
+                    Log.d("8888888", image_uri.toString());
                     break;
                 case 2:
+                    //gallary
                     //data.getData returns the content URI for the selected Image
                     image_uri = data.getData();
                     //user_profile.setImageURI(image_uri);
+                    editImage.setBackground(null);
                     Glide.with(getActivity())
                             .load(image_uri)
                             .centerCrop()
+                            .fitCenter()
+                            //.submit(1155,866)
                             .diskCacheStrategy(DiskCacheStrategy.NONE)
                             .skipMemoryCache(true)
-                            .placeholder(R.drawable.person_24)
                             .into(editImage);
                     //Toast.makeText(getActivity(),"case 2 " ,Toast.LENGTH_SHORT).show();
                     break;
@@ -473,6 +507,144 @@
 
 
     ///////////////////////////////////////////////////////////////////////
+    ////////////// image uri to bitmap ///////////////
+
+    public static String getPath(final Context context, final Uri uri) {
+
+        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
+
+        // DocumentProvider
+        if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {
+            // ExternalStorageProvider
+            if (isExternalStorageDocument(uri)) {
+                final String docId = DocumentsContract.getDocumentId(uri);
+                final String[] split = docId.split(":");
+                final String type = split[0];
+
+                if ("primary".equalsIgnoreCase(type)) {
+                    return Environment.getExternalStorageDirectory() + "/" + split[1];
+                }
+
+                // TODO handle non-primary volumes
+            }
+            // DownloadsProvider
+            else if (isDownloadsDocument(uri)) {
+
+                final String id = DocumentsContract.getDocumentId(uri);
+                final Uri contentUri = ContentUris.withAppendedId(
+                        Uri.parse("content://downloads/public_downloads"), Long.valueOf(id));
+
+                return getDataColumn(context, contentUri, null, null);
+            }
+            // MediaProvider
+            else if (isMediaDocument(uri)) {
+                final String docId = DocumentsContract.getDocumentId(uri);
+                final String[] split = docId.split(":");
+                final String type = split[0];
+
+                Uri contentUri = null;
+                if ("image".equals(type)) {
+                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
+                } else if ("video".equals(type)) {
+                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;
+                } else if ("audio".equals(type)) {
+                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
+                }
+
+                final String selection = "_id=?";
+                final String[] selectionArgs = new String[] {
+                        split[1]
+                };
+
+                return getDataColumn(context, contentUri, selection, selectionArgs);
+            }
+        }
+        // MediaStore (and general)
+        else if ("content".equalsIgnoreCase(uri.getScheme())) {
+            return getDataColumn(context, uri, null, null);
+        }
+        // File
+        else if ("file".equalsIgnoreCase(uri.getScheme())) {
+            return uri.getPath();
+        }
+
+        return null;
+    }
+
+    public static String getDataColumn(Context context, Uri uri, String selection,
+                                       String[] selectionArgs) {
+
+        Cursor cursor = null;
+        final String column = "_data";
+        final String[] projection = {
+                column
+        };
+
+        try {
+            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,
+                    null);
+            if (cursor != null && cursor.moveToFirst()) {
+                final int column_index = cursor.getColumnIndexOrThrow(column);
+                return cursor.getString(column_index);
+            }
+        } finally {
+            if (cursor != null)
+                cursor.close();
+        }
+        return null;
+    }
+
+
+    public static boolean isExternalStorageDocument(Uri uri) {
+        return "com.android.externalstorage.documents".equals(uri.getAuthority());
+    }
+
+    public static boolean isDownloadsDocument(Uri uri) {
+        return "com.android.providers.downloads.documents".equals(uri.getAuthority());
+    }
+
+    public static boolean isMediaDocument(Uri uri) {
+        return "com.android.providers.media.documents".equals(uri.getAuthority());
+    }
+
+    ////////////////////////////////oriantation
+
+    public static Bitmap modifyOrientation(Bitmap bitmap, String image_absolute_path) throws IOException {
+        ExifInterface ei = new ExifInterface(image_absolute_path);
+        int orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);
+
+        switch (orientation) {
+            case ExifInterface.ORIENTATION_ROTATE_90:
+                return rotate(bitmap, 90);
+
+            case ExifInterface.ORIENTATION_ROTATE_180:
+                return rotate(bitmap, 180);
+
+            case ExifInterface.ORIENTATION_ROTATE_270:
+                return rotate(bitmap, 270);
+
+            case ExifInterface.ORIENTATION_FLIP_HORIZONTAL:
+                return flip(bitmap, true, false);
+
+            case ExifInterface.ORIENTATION_FLIP_VERTICAL:
+                return flip(bitmap, false, true);
+
+            default:
+                return bitmap;
+        }
+    }
+
+    public static Bitmap rotate(Bitmap bitmap, float degrees) {
+        Matrix matrix = new Matrix();
+        matrix.postRotate(degrees);
+        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
+    }
+
+    public static Bitmap flip(Bitmap bitmap, boolean horizontal, boolean vertical) {
+        Matrix matrix = new Matrix();
+        matrix.preScale(horizontal ? -1 : 1, vertical ? -1 : 1);
+        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
+    }
 
 
 }
\ No newline at end of file
Index: app/src/main/java/com/example/graduationproject/Fragments/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Fragments;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.example.graduationproject.R;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\npublic class\r\n\r\n\r\nProfileFragment extends Fragment implements View.OnClickListener {\r\n    private TextView profileName,appointmentsNum,friendsNum,heartNum;\r\n    private ImageView profilePic;\r\n    private FloatingActionButton floatingEditProfileBtn;\r\n    public FirebaseAuth auth ;\r\n    String userName,userImage,friendsNumber,heartNumber,appointmentsNumber;\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view= inflater.inflate(R.layout.fragment_profile, container, false);\r\n        setHasOptionsMenu(false);\r\n        profileName=view.findViewById(R.id.profile_name);\r\n        appointmentsNum=view.findViewById(R.id.profile_therapist_num);\r\n        friendsNum=view.findViewById(R.id.profile_friends_num);\r\n        heartNum=view.findViewById(R.id.profile_heart_num);\r\n        profilePic=view.findViewById(R.id.profile_image);\r\n        floatingEditProfileBtn =view.findViewById(R.id.floating_edit_profile_btn);\r\n        floatingEditProfileBtn.setOnClickListener(this);\r\n        auth=FirebaseAuth.getInstance();\r\n        dataBase();\r\n\r\n        return view;\r\n    }\r\n\r\n    private void dataBase() {\r\n        FirebaseUser firebaseUser = auth.getCurrentUser();\r\n        final String id =firebaseUser.getUid();\r\n        Query query = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(id);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            userName=snapshot.child(\"name\").getValue(String.class);\r\n                            userImage=snapshot.child(\"uri\").getValue(String.class);\r\n                            profileName.setText(userName);\r\n                            Picasso.get().load(userImage).into(profilePic);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        Query query1 = FirebaseDatabase.getInstance().getReference().child(\"Friends\").child(\"FriendsNumber\").child(id);\r\n        query1.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            friendsNumber=snapshot.child(\"Friends\").getValue(String.class);\r\n                            friendsNum.setText(friendsNumber);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        Query query2 = FirebaseDatabase.getInstance().getReference().child(\"Profiles\").child(\"Appreciate\").child(\"Likes\").child(id);\r\n        query2.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            heartNumber=snapshot.child(\"Appreciate\").getValue(String.class);\r\n                            heartNum.setText(heartNumber);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n        Query query3 = FirebaseDatabase.getInstance().getReference().child(\"Profiles\").child(\"appoints number\").child(id);\r\n        query3.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            appointmentsNumber=snapshot.child(\"appointments\").getValue(String.class);\r\n                            appointmentsNum.setText(appointmentsNumber);\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        FragmentManager fragmentManager = getFragmentManager();\r\n        fragmentManager.beginTransaction().replace(R.id.fragment_container,new EditProfileFragment()).addToBackStack(\"\").commit();\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Fragments/ProfileFragment.java	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/java/com/example/graduationproject/Fragments/ProfileFragment.java	(date 1622869422812)
@@ -1,6 +1,7 @@
 package com.example.graduationproject.Fragments;
 
 import android.os.Bundle;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -12,14 +13,23 @@
 import androidx.fragment.app.FragmentManager;
 
 import com.example.graduationproject.R;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
 import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.google.firebase.auth.AuthCredential;
+import com.google.firebase.auth.EmailAuthProvider;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.DataSnapshot;
 import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 import com.google.firebase.database.Query;
 import com.google.firebase.database.ValueEventListener;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
 import com.squareup.picasso.Picasso;
 
 public class
@@ -28,9 +38,9 @@
 ProfileFragment extends Fragment implements View.OnClickListener {
     private TextView profileName,appointmentsNum,friendsNum,heartNum;
     private ImageView profilePic;
-    private FloatingActionButton floatingEditProfileBtn;
+    private FloatingActionButton floatingEditProfileBtn ,delete;
     public FirebaseAuth auth ;
-    String userName,userImage,friendsNumber,heartNumber,appointmentsNumber;
+    String userName,userImage,friendsNumber,heartNumber,appointmentsNumber, password;
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
@@ -44,9 +54,106 @@
         profilePic=view.findViewById(R.id.profile_image);
         floatingEditProfileBtn =view.findViewById(R.id.floating_edit_profile_btn);
         floatingEditProfileBtn.setOnClickListener(this);
+        delete =view.findViewById(R.id.deleteBtn);
         auth=FirebaseAuth.getInstance();
         dataBase();
 
+
+        delete.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+                String uid = user.getUid();
+                Log.d("123id", uid);
+
+                //re-auth user
+                user = FirebaseAuth.getInstance().getCurrentUser();
+
+                // Get auth credentials from the user for re-authentication. The example below shows
+                // email and password credentials but there are multiple possible providers,
+                // such as GoogleAuthProvider or FacebookAuthProvider.
+                AuthCredential credential = EmailAuthProvider.getCredential(user.getEmail(), password);
+                //GoogleAuthProvider.getCredential(,null);
+               // FacebookAuthProvider.getCredential();
+
+                // Prompt the user to re-provide their sign-in credentials
+                user.reauthenticate(credential)
+                        .addOnSuccessListener(new OnSuccessListener<Void>() {
+                            @Override
+                            public void onSuccess(Void unused) {
+
+                                Log.d("123re-auth", "User re-authenticated.");
+                                ///////////////////////////////////////////
+                                /// realtime
+                                FirebaseDatabase database = FirebaseDatabase.getInstance();
+                                DatabaseReference myRef = database.getReference("Users");
+                                myRef.child(uid).removeValue().addOnCompleteListener(new OnCompleteListener<Void>() {
+                                    @Override
+                                    public void onComplete(@NonNull Task<Void> task) {
+                                        if (task.isSuccessful()) {
+                                            Log.d("123real", "User account deleted.");
+                                        }
+                                    }
+                                });
+
+                                ////storage  // Create a storage reference from our app// Defining the child of storageReference
+                                StorageReference storageReference = FirebaseStorage.getInstance().getReference();
+                                final StorageReference ref = storageReference.child("images/").child(uid + "/UserImage");
+                                // Delete the file
+                                ref.delete().addOnSuccessListener(new OnSuccessListener<Void>() {
+                                    @Override
+                                    public void onSuccess(Void aVoid) {
+                                        // File deleted successfully
+                                        Log.d("123storage", "User account deleted.");
+                                    }
+                                }).addOnFailureListener(new OnFailureListener() {
+                                    @Override
+                                    public void onFailure(@NonNull Exception exception) {
+                                        // Uh-oh, an error occurred!
+                                    }
+                                });
+
+                                ///auth//////////////////////////////////////
+                                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+                                user.delete().addOnCompleteListener(new OnCompleteListener<Void>() {
+                                    @Override
+                                    public void onComplete(@NonNull Task<Void> task) {
+                                        if (task.isSuccessful()) {
+                                            Log.d("123auth", "User account deleted.");
+                                            // startActivity(new Intent(getActivity(), SignMainActivity.class));
+                                        } else {
+                                            Log.w("123auth","Something is wrong!");
+                                        }
+                                    }
+                                });
+                                ///////////////////////////////////////
+                            }
+                        })
+                        .addOnCompleteListener(new OnCompleteListener<Void>() {
+                            @Override
+                            public void onComplete(@NonNull Task<Void> task) {
+                                ///auth//////////////////////////////////////
+                                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+                                user.delete().addOnCompleteListener(new OnCompleteListener<Void>() {
+                                    @Override
+                                    public void onComplete(@NonNull Task<Void> task) {
+                                        if (task.isSuccessful()) {
+                                            Log.d("123auth2", "User account deleted.");
+                                            // startActivity(new Intent(getActivity(), SignMainActivity.class));
+                                        } else {
+                                            Log.w("123auth2","Something is wrong!");
+                                        }
+                                    }
+                                });
+                                ///////////////////////////////////////
+                                Log.w("123re-authOnComplete2","Something is wrong!");
+                            }
+                        });
+
+
+            }
+        });
+
         return view;
     }
 
@@ -64,6 +171,8 @@
                             userImage=snapshot.child("uri").getValue(String.class);
                             profileName.setText(userName);
                             Picasso.get().load(userImage).into(profilePic);
+                            password =snapshot.child("pass").getValue(String.class);
+                            Log.i(password, "old password: ");
                         }
                     }
 
@@ -149,4 +258,7 @@
         fragmentManager.beginTransaction().replace(R.id.fragment_container,new EditProfileFragment()).addToBackStack("").commit();
 
     }
+
+
+
 }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_8\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ .idea/misc.xml	(date 1622842356117)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/com/example/graduationproject/Activities/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Activities;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport com.example.graduationproject.Fragments.AppointmentsFragment;\r\nimport com.example.graduationproject.Fragments.CartFragment;\r\nimport com.example.graduationproject.Fragments.FriendListFragment;\r\nimport com.example.graduationproject.Fragments.HomeFragment;\r\nimport com.example.graduationproject.Fragments.NotificationFragment;\r\nimport com.example.graduationproject.Fragments.ProfileFragment;\r\nimport com.example.graduationproject.Fragments.TherapistsFragment;\r\nimport com.example.graduationproject.R;\r\nimport com.example.graduationproject.Sign.SignMainActivity;\r\nimport com.facebook.login.LoginManager;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport de.hdodenhof.circleimageview.CircleImageView;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n    private Toolbar toolbar;\r\n    private DrawerLayout drawerLayout;\r\n    private NavigationView navigationView;\r\n    public FirebaseAuth mAuth;\r\n    String userName,userImage;\r\n    CircleImageView imgHead;\r\n    View view;\r\n    TextView textName;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        toolbar=findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n\r\n        drawerLayout =findViewById(R.id.drawer_layout);\r\n        ActionBarDrawerToggle toggle=new ActionBarDrawerToggle(this,drawerLayout,toolbar,R.string.open,R.string.close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        getHeader();\r\n\r\n        navigationView=findViewById(R.id.navigation);\r\n        view =navigationView.getHeaderView(0);\r\n        imgHead=view.findViewById(R.id.header_image);\r\n        textName=view.findViewById(R.id.header_name);\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        if(savedInstanceState==null) {\r\n            getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new HomeFragment()).commit();\r\n            navigationView.setCheckedItem(R.id.home);\r\n        }\r\n\r\n    }\r\n    @Override\r\n    public void onBackPressed() {\r\n        if(drawerLayout.isDrawerOpen(GravityCompat.START)){\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        }else{\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        switch (menuItem.getItemId()){\r\n            case R.id.home:\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new HomeFragment()).commit();\r\n                break;\r\n            case R.id.profile:\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new ProfileFragment()).commit();\r\n                break;\r\n            case R.id.friends_list:\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new FriendListFragment()).commit();\r\n                break;\r\n            case R.id.therapists:\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new TherapistsFragment()).commit();\r\n                break;\r\n            case R.id.notification:\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new NotificationFragment()).commit();\r\n                break;\r\n            case R.id.appointments:\r\n                getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new AppointmentsFragment()).commit();\r\n                break;\r\n            case R.id.cart:\r\n               getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new CartFragment()).commit();\r\n                break;\r\n            case R.id.log_out:\r\n\r\n                Toast.makeText(this, \"Log Out\", Toast.LENGTH_SHORT).show();\r\n\r\n                mAuth.signOut();\r\n                FirebaseAuth.getInstance().signOut();\r\n                LoginManager.getInstance().logOut();\r\n\r\n                Intent intent = new Intent(getApplicationContext(), SignMainActivity.class);\r\n                intent.setFlags(Intent.FLAG_ACTIVITY_NO_HISTORY);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\r\n                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\r\n                startActivity(intent);\r\n\r\n                //Toast.makeText(getActivity(),\"Logged out!\",Toast.LENGTH_LONG).show();\r\n\r\n                break;\r\n\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    private void getHeader() {\r\n        FirebaseUser firebaseUser=mAuth.getCurrentUser();\r\n        final String id=firebaseUser.getUid();\r\n\r\n        Query query6 = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(id);\r\n        query6.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {\r\n                if(dataSnapshot!=null){\r\n                    if (dataSnapshot.exists() && dataSnapshot.getChildrenCount()>0&&dataSnapshot.getValue().toString().length()>0) {\r\n                        for (DataSnapshot snapshot : dataSnapshot.getChildren()) {\r\n                            userName=dataSnapshot.child(\"name\").getValue(String.class);\r\n                            userImage=dataSnapshot.child(\"uri\").getValue(String.class);\r\n                            Log.i(userName.toString(), \"onDataChange: \");\r\n                            textName.setText(userName);\r\n                            Picasso.get().load(userImage).into(imgHead);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError databaseError) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Activities/MainActivity.java	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/java/com/example/graduationproject/Activities/MainActivity.java	(date 1622859825517)
@@ -1,5 +1,6 @@
 package com.example.graduationproject.Activities;
 
+import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
@@ -15,6 +16,8 @@
 import androidx.core.view.GravityCompat;
 import androidx.drawerlayout.widget.DrawerLayout;
 
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
 import com.example.graduationproject.Fragments.AppointmentsFragment;
 import com.example.graduationproject.Fragments.CartFragment;
 import com.example.graduationproject.Fragments.FriendListFragment;
@@ -145,7 +148,7 @@
                             userImage=dataSnapshot.child("uri").getValue(String.class);
                             Log.i(userName.toString(), "onDataChange: ");
                             textName.setText(userName);
-                            Picasso.get().load(userImage).into(imgHead);
+                            Picasso.get().load(userImage).centerCrop().fit().into(imgHead);
 
                         }
                     }
Index: app/src/main/res/layout/fragment_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:gravity=\"center_horizontal\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".Fragments.ProfileFragment\">\r\n\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:id=\"@+id/profile_image\"\r\n        android:layout_width=\"180dp\"\r\n        android:layout_height=\"180dp\"\r\n        android:layout_marginTop=\"@dimen/_30sdp\"\r\n        android:background=\"@drawable/doctor_icon\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/profile_name\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"@dimen/_10sdp\"\r\n        android:text=\"Ahmed Ali\"\r\n        android:textSize=\"@dimen/_23sdp\"\r\n        android:textColor=\"@color/black\"/>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"@dimen/_100sdp\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:gravity=\"center_horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/profile_therapist_num\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"0\"\r\n                android:textSize=\"@dimen/_20sdp\"\r\n                android:textColor=\"@color/black\"\r\n                />\r\n\r\n\r\n            <ImageView\r\n                android:layout_width=\"@dimen/_40sdp\"\r\n                android:layout_height=\"@dimen/_40sdp\"\r\n                android:background=\"@drawable/appointment\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"/>\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_marginLeft=\"@dimen/_65sdp\"\r\n            android:gravity=\"center_horizontal\">\r\n\r\n\r\n            <TextView\r\n                android:id=\"@+id/profile_friends_num\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"0\"\r\n                android:textSize=\"@dimen/_20sdp\"\r\n                android:textColor=\"@color/black\"/>\r\n\r\n            <ImageView\r\n                android:layout_width=\"@dimen/_40sdp\"\r\n                android:layout_height=\"@dimen/_35sdp\"\r\n                android:background=\"@drawable/friends\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"/>\r\n        </LinearLayout>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            android:layout_marginLeft=\"@dimen/_65sdp\"\r\n            android:gravity=\"center_horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/profile_heart_num\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n\r\n                android:text=\"0\"\r\n                android:textSize=\"@dimen/_20sdp\"\r\n                android:textColor=\"@color/black\"/>\r\n\r\n            <ImageView\r\n                android:layout_width=\"@dimen/_40sdp\"\r\n                android:layout_height=\"@dimen/_35sdp\"\r\n                android:background=\"@drawable/heart_icon\"\r\n                android:layout_marginTop=\"@dimen/_10sdp\"/>\r\n        </LinearLayout>\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n        android:id=\"@+id/floating_edit_profile_btn\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"end|bottom\"\r\n        android:layout_marginTop=\"@dimen/_70sdp\"\r\n        android:layout_marginEnd=\"10dp\"\r\n        android:src=\"@drawable/ic_baseline_edit_24\"\r\n        android:backgroundTint=\"@color/blue\"\r\n        app:borderWidth=\"0dp\"\r\n        />\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_profile.xml	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/res/layout/fragment_profile.xml	(date 1622860639306)
@@ -101,17 +101,35 @@
 
 
     </LinearLayout>
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+
+
+        <com.google.android.material.floatingactionbutton.FloatingActionButton
+            android:id="@+id/deleteBtn"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="@dimen/_70sdp"
+            android:layout_marginStart="30dp"
+            android:src="@drawable/ic_baseline_delete_forever_24"
+            android:backgroundTint="@color/blue"
+            app:borderWidth="0dp"
+            />
 
-    <com.google.android.material.floatingactionbutton.FloatingActionButton
-        android:id="@+id/floating_edit_profile_btn"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_gravity="end|bottom"
-        android:layout_marginTop="@dimen/_70sdp"
-        android:layout_marginEnd="10dp"
-        android:src="@drawable/ic_baseline_edit_24"
-        android:backgroundTint="@color/blue"
-        app:borderWidth="0dp"
-        />
+        <com.google.android.material.floatingactionbutton.FloatingActionButton
+            android:id="@+id/floating_edit_profile_btn"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentEnd="true"
+            android:layout_marginTop="@dimen/_70sdp"
+            android:layout_marginEnd="30dp"
+            android:src="@drawable/ic_baseline_edit_24"
+            android:backgroundTint="@color/blue"
+            app:borderWidth="0dp"
+            />
+    </RelativeLayout>
+
 
 </LinearLayout>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ .idea/runConfigurations.xml	(date 1622831238992)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.3\"\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.graduationproject\"\r\n        minSdkVersion 19\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.3.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:21.0.1'\r\n    implementation 'com.google.firebase:firebase-database:19.6.0'\r\n    implementation 'com.google.firebase:firebase-analytics:17.2.2'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n    implementation 'com.android.support:design:30.0.0'\r\n\r\n    implementation 'com.android.support:design:30.0.0'\r\n    implementation \"com.google.android.material:material:1.2.0\"\r\n\r\n    implementation 'de.hdodenhof:circleimageview:3.1.0'\r\n\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n        //retrofit\r\n    implementation 'com.squareup.retrofit2:retrofit:2.9.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'\r\n\r\n    implementation 'com.intuit.sdp:sdp-android:1.0.6'\r\n    implementation 'com.intuit.ssp:ssp-android:1.0.6'\r\n\r\n    /////////osama//////////\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:design:26.1.0'\r\n    implementation 'com.etebarian:meow-bottom-navigation-java:1.2.0'\r\n\r\n    implementation 'com.intuit.sdp:sdp-android:1.0.6'\r\n    implementation 'com.intuit.ssp:ssp-android:1.0.6'\r\n\r\n    //glide\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    implementation 'com.google.firebase:firebase-storage:19.2.1'\r\n    implementation 'com.google.firebase:firebase-functions:19.2.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n\r\n\r\n\r\n\r\n\r\n    //noinspection GradleCompatible\r\n    implementation 'androidx.appcompat:appcompat:1.3.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:design:28.0.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:cardview-v7:28.0.0'\r\n    implementation 'androidx.cardview:cardview:1.0.0'\r\n    //noinspection GradleCompatible\r\n    implementation 'androidx.legacy:legacy-support-v13:1.0.0'\r\n\r\n    // Import the BoM for the Firebase platform\r\n    implementation platform('com.google.firebase:firebase-bom:26.7.0')\r\n\r\n    // Declare the dependency for the Firebase Authentication library\r\n    // When using the BoM, you don't specify versions in Firebase library dependencies\r\n    implementation 'com.google.firebase:firebase-auth'\r\n\r\n    // Also declare the dependency for the Google Play services library and specify its version\r\n    implementation 'com.google.android.gms:play-services-auth:19.0.0'\r\n\r\n    // facebook sign in\r\n    implementation 'com.facebook.android:facebook-login:5.15.3'\r\n\r\n    //notification\r\n    implementation 'com.google.firebase:firebase-messaging:20.1.2'\r\n    //Retrofit2\r\n    implementation 'com.squareup.retrofit2:retrofit:2.3.0'\r\n    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'\r\n\r\n\r\n    implementation 'com.android.support:multidex:1.0.3'\r\n    android {\r\n        defaultConfig {\r\n            minSdkVersion 21\r\n            targetSdkVersion 30\r\n            multiDexEnabled true\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/build.gradle	(date 1622847701768)
@@ -68,10 +68,6 @@
     implementation 'com.google.firebase:firebase-functions:19.2.0'
     annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
 
-
-
-
-
     //noinspection GradleCompatible
     implementation 'androidx.appcompat:appcompat:1.3.0'
     //noinspection GradleCompatible
Index: app/src/main/java/com/example/graduationproject/Sign/Login_Fragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Sign;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.content.res.XmlResourceParser;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.text.method.HideReturnsTransformationMethod;\r\nimport android.text.method.PasswordTransformationMethod;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.CompoundButton.OnCheckedChangeListener;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.example.graduationproject.Activities.MainActivity;\r\nimport com.example.graduationproject.R;\r\nimport com.facebook.AccessToken;\r\nimport com.facebook.CallbackManager;\r\nimport com.facebook.FacebookCallback;\r\nimport com.facebook.FacebookException;\r\nimport com.facebook.GraphRequest;\r\nimport com.facebook.GraphResponse;\r\nimport com.facebook.Profile;\r\nimport com.facebook.internal.ImageRequest;\r\nimport com.facebook.login.LoginResult;\r\nimport com.facebook.login.widget.LoginButton;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FacebookAuthProvider;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Login_Fragment extends Fragment implements OnClickListener {\r\n    private static final String TAG = \"GoogleActivity\";\r\n    private static final String FTAG = \"FacebookLogin\";\r\n    private static final int RC_SIGN_IN = 12345;\r\n    private static View view;\r\n    private static EditText emailid, password;\r\n    private static Button loginButton, faceBookBtn, googleBtn;\r\n    private static TextView forgotPassword, signUp;\r\n    private static CheckBox show_hide_password;\r\n    private static LinearLayout loginLayout;\r\n    private static Animation shakeAnimation;\r\n    private static FragmentManager fragmentManager;\r\n    private static LoginButton loginButtonF;\r\n    public GoogleSignInClient mGoogleSignInClient;\r\n    public FirebaseAuth mAuth;\r\n    public FirebaseUser user;\r\n    public String nameReal, idReal, emailReal;\r\n    public Uri uriReal;\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    FirebaseAuth.AuthStateListener mAuthListener;\r\n    User userData = new User();\r\n    private CallbackManager mCallbackManager;\r\n\r\n\r\n    public Login_Fragment() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.login_layout, container, false);\r\n\r\n        // Configure Google Sign In\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n\r\n        mGoogleSignInClient = GoogleSignIn.getClient(getActivity(), gso);\r\n\r\n\r\n        mCallbackManager = CallbackManager.Factory.create();\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        initViews();\r\n        setListeners();\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        // String ll = user.getUid() + \"$$\";\r\n        //  Log.d(\"5555555\",ll);\r\n        // Check if user or account is signed in (non-null) and update UI accordingly.\r\n        updateUI(user);\r\n\r\n\r\n    }\r\n\r\n\r\n    // Initiate Views\r\n    private void initViews() {\r\n        fragmentManager = getActivity().getSupportFragmentManager();\r\n\r\n        loginButtonF = view.findViewById(R.id.login_button);\r\n        loginButtonF.setFragment(Login_Fragment.this);\r\n        emailid = view.findViewById(R.id.login_emailid);\r\n        password = view.findViewById(R.id.login_password);\r\n        loginButton = view.findViewById(R.id.loginBtn);\r\n        forgotPassword = view.findViewById(R.id.forgot_password);\r\n        signUp = view.findViewById(R.id.createAccount);\r\n        show_hide_password = view\r\n                .findViewById(R.id.show_hide_password);\r\n        loginLayout = view.findViewById(R.id.login_layout);\r\n        googleBtn = view.findViewById(R.id.google);\r\n        faceBookBtn = view.findViewById(R.id.facebook);\r\n        // Load ShakeAnimation\r\n        shakeAnimation = AnimationUtils.loadAnimation(getActivity(),\r\n                R.anim.shake);\r\n\r\n\r\n        // Setting text selector over textviews\r\n        @SuppressLint(\"ResourceType\") XmlResourceParser xrp = getResources().getXml(R.drawable.text_selector);\r\n        try {\r\n            ColorStateList csl = ColorStateList.createFromXml(getResources(),\r\n                    xrp);\r\n\r\n            forgotPassword.setTextColor(csl);\r\n            show_hide_password.setTextColor(csl);\r\n            signUp.setTextColor(csl);\r\n        } catch (Exception e) {\r\n        }\r\n    }\r\n\r\n    // Set Listeners\r\n    private void setListeners() {\r\n        loginButton.setOnClickListener(this);\r\n        forgotPassword.setOnClickListener(this);\r\n        signUp.setOnClickListener(this);\r\n        googleBtn.setOnClickListener(this);\r\n        faceBookBtn.setOnClickListener(this);\r\n        loginButtonF.setOnClickListener(this);\r\n\r\n\r\n        // Set check listener over checkbox for showing and hiding password\r\n        show_hide_password\r\n                .setOnCheckedChangeListener(new OnCheckedChangeListener() {\r\n\r\n                    @Override\r\n                    public void onCheckedChanged(CompoundButton button,\r\n                                                 boolean isChecked) {\r\n\r\n                        // If it is checkec then show password else hide\r\n                        // password\r\n                        if (isChecked) {\r\n\r\n                            show_hide_password.setText(R.string.hide_pwd);// change checkbox text\r\n                            password.setInputType(InputType.TYPE_CLASS_TEXT);\r\n                            password.setTransformationMethod(HideReturnsTransformationMethod.getInstance());// show password\r\n                        } else {\r\n                            show_hide_password.setText(R.string.show_pwd);// change checkbox text\r\n                            password.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\r\n                            password.setTransformationMethod(PasswordTransformationMethod.getInstance());// hide password\r\n\r\n                        }\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.loginBtn:\r\n                checkValidation();\r\n                break;\r\n\r\n            case R.id.forgot_password:\r\n\r\n                // Replace forgot password fragment with animation\r\n                fragmentManager\r\n                        .beginTransaction()\r\n                        .setCustomAnimations(R.anim.right_enter, R.anim.left_out)\r\n                        .replace(R.id.frameContainer,\r\n                                new ForgotPassword_Fragment(),\r\n                                Utils.ForgotPassword_Fragment).commit();\r\n                break;\r\n            case R.id.createAccount:\r\n\r\n                // Replace signup frgament with animation\r\n                fragmentManager\r\n                        .beginTransaction()\r\n                        .setCustomAnimations(R.anim.right_enter, R.anim.left_out)\r\n                        .replace(R.id.frameContainer, new SignUp_Fragment(),\r\n                                Utils.SignUp_Fragment).commit();\r\n\r\n                break;\r\n            case R.id.google:\r\n                signIn();\r\n\r\n                break;\r\n\r\n            case R.id.facebook:\r\n                loginButtonF.performClick();\r\n                signInFacebook();\r\n                break;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Check Validation before login\r\n    private void checkValidation() {\r\n        // Get email id and password\r\n        String getEmailId = emailid.getText().toString();\r\n        String getPassword = password.getText().toString();\r\n\r\n        // Check patter for email id\r\n        Pattern p = Pattern.compile(Utils.regEx);\r\n\r\n        Matcher m = p.matcher(getEmailId);\r\n\r\n        // Check for both field is empty or not\r\n        if (getEmailId.equals(\"\") || getEmailId.length() == 0\r\n                || getPassword.equals(\"\") || getPassword.length() == 0) {\r\n            loginLayout.startAnimation(shakeAnimation);\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Enter both credentials.\");\r\n\r\n        }\r\n        // Check if email id is valid or not\r\n        else if (!m.find())\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Your Email Id is Invalid.\");\r\n            // Else do login and do your stuff\r\n        else\r\n            signIn(getEmailId, getPassword);\r\n\r\n\r\n    }\r\n\r\n    public void signIn(String email, String password) {\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n\r\n                            user = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n                            if (user != null) {\r\n                                // Name, email address, and profile photo Url\r\n                                String name = user.getDisplayName();\r\n                                if (name == null) {\r\n                                    Log.d(\"urlllname\", \"Welcome\");\r\n                                    Toast.makeText(getActivity(), \"Welcome++++\", Toast.LENGTH_SHORT)\r\n                                            .show();\r\n                                    updateUI(user);\r\n                                } else {\r\n                                    Log.d(\"urllName\", name);\r\n                                    Toast.makeText(getActivity(), \"Welcome\" + name, Toast.LENGTH_SHORT)\r\n                                            .show();\r\n                                    updateUI(user);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Toast.makeText(getActivity(), \"Authentication failed: \" + task.getException(),\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void updateUI(FirebaseUser user) {\r\n        /*-------- Check if user is already logged in or not--------*/\r\n        if (user != null) {\r\n            /*------------ If user's email is verified then access login -----------*/\r\n            if (user.isEmailVerified()) {\r\n                String name = user.getDisplayName();\r\n                Toast.makeText(getActivity(), \"Login Success.\" + name,\r\n                        Toast.LENGTH_SHORT).show();\r\n\r\n                startActivity(new Intent(getActivity(), MainActivity.class));\r\n            } else {\r\n                Toast.makeText(getActivity(), \"Your Email is not verified.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else {\r\n            Toast.makeText(getActivity(), \"Welcome , none :)\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n        /*-------- Check if G user is already logged in or not--------*/\r\n        if (user != null) {\r\n            String name = user.getDisplayName();\r\n            Toast.makeText(getActivity(), \"Google or Facebook Login Success.\" + name,\r\n                    Toast.LENGTH_SHORT).show();\r\n            // Log.d(\"facebookdataggg\", user.getPhotoUrl() + \"\");\r\n\r\n            startActivity(new Intent(getActivity(), MainActivity.class));\r\n\r\n        } else {\r\n            Toast.makeText(getActivity(), \"Welcome , G , F none :)\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // [START onactivityresult]\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\r\n        if (requestCode == 9001) {\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n\r\n                // Google Sign In was successful, authenticate with Firebase\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                Log.d(TAG, \"firebaseAuthWithGoogle:\" + account.getId());\r\n                firebaseAuthWithGoogle(account.getIdToken());\r\n                GoogleSignInAccount acct = GoogleSignIn.getLastSignedInAccount(getActivity());\r\n                if (account != null) {\r\n                    String personName = account.getDisplayName();\r\n                    nameReal = personName;\r\n                    String personEmail = account.getEmail();\r\n                    emailReal = personEmail;\r\n                    String personId = account.getId();\r\n                    Uri personPhoto = account.getPhotoUrl();\r\n                    uriReal = personPhoto;\r\n\r\n                    //final String gId = firebaseUser.getUid();//firebaseUser.getUid();\r\n\r\n\r\n                    FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n                    while (mAuth.getCurrentUser() == null) {\r\n                        mAuth = FirebaseAuth.getInstance();\r\n\r\n                        Log.v(\"555555\", \"id: \" + \"nulllllllll\");\r\n\r\n                        if (mAuth.getCurrentUser() != null) {\r\n                            //Your action here\r\n\r\n                            FirebaseUser firebaseUser = mAuth.getCurrentUser();\r\n                            String fId = firebaseUser.getUid();\r\n                            idReal = fId;\r\n                            Log.v(\"5555555\", \"id: \" + idReal);\r\n                            saveGoogleAndFacebookAuthToRealFirebase(idReal, nameReal, emailReal, uriReal);\r\n                            Log.v(\"555555\", \": \" + fId);\r\n                            break;\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n            } catch (ApiException e) {\r\n                // Google Sign In failed, update UI appropriately\r\n                Log.w(TAG, \"Google sign in failed\", e);\r\n            }\r\n        } else {\r\n\r\n            // Pass the activity result back to the Facebook SDK\r\n            mCallbackManager.onActivityResult(requestCode, resultCode, data);\r\n\r\n        }\r\n\r\n    }\r\n    // [END onactivityresult]\r\n\r\n    // [START auth_with_google]\r\n    private void firebaseAuthWithGoogle(String idToken) {\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"signInWithCredential:success\");\r\n                            FirebaseUser user = mAuth.getCurrentUser();\r\n                            updateUI(user);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.d(TAG, \"signInWithCredential:failure\", task.getException());\r\n                            updateUI(null);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n    // [END auth_with_google]\r\n\r\n    // [START signin]\r\n    private void signIn() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, 9001);\r\n    }\r\n    // [END signin]\r\n\r\n    public void saveGoogleAndFacebookAuthToRealFirebase(String uid, String name, String email, Uri uri) {\r\n\r\n        userData.setEmail(email);\r\n        userData.setUri(uri);\r\n        //userData.setLocation(location);\r\n        //userData.setPhone(phone);\r\n        ///userData.setPassword(password);\r\n        userData.setName(name);\r\n        userData.setid(uid);\r\n\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        DatabaseReference myRef = database.getReference(\"Users\").child(uid);\r\n\r\n        myRef.child(\"id\").setValue(userData.getid());\r\n        myRef.child(\"email\").setValue(userData.getEmail());\r\n        myRef.child(\"uri\").setValue(userData.getUri().toString());\r\n        //myRef.child(\"location\").setValue(userData.getLocation());\r\n        //myRef.child(\"phone\").setValue(userData.getPhone());\r\n        //myRef.child(\"pass\").setValue(userData.getPassword());\r\n        myRef.child(\"name\").setValue(userData.getName());\r\n\r\n\r\n    }\r\n\r\n    private void signInFacebook() {\r\n        // [START initialize_fblogin]\r\n        // Initialize Facebook Login button\r\n\r\n        loginButtonF.setPermissions(\"email\", \"public_profile\");\r\n        loginButtonF.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {\r\n            @Override\r\n            public void onSuccess(LoginResult loginResult) {\r\n                Log.d(FTAG, \"facebook:onSuccess:\" + loginResult);\r\n\r\n                handleFacebookAccessToken(loginResult.getAccessToken());\r\n                //Use GraphApi to get the information into the app.\r\n                GraphRequest request = GraphRequest.newMeRequest(\r\n                        //pass two parameter\r\n                        loginResult.getAccessToken(),                       //one is the current token\r\n                        new GraphRequest.GraphJSONObjectCallback()          //2nd is grahJSONObject callback\r\n                        {\r\n                            @Override\r\n                            public void onCompleted(JSONObject object, GraphResponse response) {\r\n                                Log.v(\"facebookdata\", response.toString());\r\n\r\n                                // Application code\r\n                                try {\r\n                                    String obj = object.toString();                     //get complete JSON object refrence.\r\n                                    String name = object.getString(\"name\");                 //get particular JSON Object\r\n                                    nameReal = name;\r\n                                    String email = object.getString(\"email\");\r\n                                    emailReal = email;\r\n                                    //String birthday = object.getString(\"birthday\"); // 01/31/1980 format\r\n                                    String id = object.getString(\"id\");\r\n                                    //String gender = object.getString(\"gender\");\r\n                                    String profileURL = \"\";\r\n\r\n                                    if (Profile.getCurrentProfile() != null) {\r\n\r\n                                        //add this check because some people don't have profile picture\r\n                                        profileURL = ImageRequest.getProfilePictureUri(Profile.getCurrentProfile().getId(), 400, 400) + \"&access_token=2615626898730021|JUNggramyAICJhX_cwcl0M4Vs48\";\r\n                                        //after getting the profile url you can easily set this to image view using Glide or retrofit library . simple :)\r\n                                        Log.v(\"facebookdata1\", profileURL);\r\n                                    }\r\n\r\n\r\n                                    Log.v(\"facebookdata2\", obj);\r\n                                    Log.v(\"facebookdata\", \"id: \" + id);\r\n                                    Log.v(\"facebookdata\", \"name: \" + name);\r\n                                    Log.v(\"facebookdata\", \"email: \" + email);\r\n                                    // Log.v(\"facebookdata\",\"birthday: \"+birthday);\r\n                                    //Log.v(\"facebookdata\",\"gender: \"+gender);\r\n                                    Log.v(\"facebookdata\", \"profileURL: \" + profileURL);\r\n                                    Uri uri = Uri.parse(profileURL);\r\n                                    uriReal = uri;\r\n                                    //FirebaseAuth m2Auth = FirebaseAuth.getInstance();\r\n                                    //FirebaseUser user = mAuth.getCurrentUser();\r\n                                    //String UID =user.getUid();\r\n                                   /*\r\n                                    FirebaseUser firebaseUser =mAuth.getCurrentUser();\r\n                                    String fId =firebaseUser.getUid();*/\r\n\r\n\r\n                                    mAuth = FirebaseAuth.getInstance();\r\n\r\n                                    while (mAuth.getCurrentUser() == null) {\r\n\r\n                                        Log.v(\"555555\", \"id: \" + \"nulllllllll\");\r\n\r\n                                        if (mAuth.getCurrentUser() != null) {\r\n                                            //Your action here\r\n                                            FirebaseUser firebaseUser = mAuth.getCurrentUser();\r\n                                            String fId = firebaseUser.getUid();\r\n                                            idReal = fId;\r\n                                            Log.v(\"5555555\", \"id: \" + idReal);\r\n                                            saveGoogleAndFacebookAuthToRealFirebase(idReal, nameReal, emailReal, uriReal);\r\n                                            Log.v(\"555555\", \": \" + fId);\r\n                                            break;\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n                                        @Override\r\n                                        public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n\r\n                                        }\r\n                                    };\r\n\r\n\r\n                                } catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n                        });\r\n                Bundle parameters = new Bundle();\r\n                parameters.putString(\"fields\", \"id,name,email,gender,birthday\");                    //set these parameter\r\n                request.setParameters(parameters);\r\n                request.executeAsync();                                 //exuecute task in seprate thread\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancel() {\r\n                Log.d(FTAG, \"facebook:onCancel\");\r\n            }\r\n\r\n            @Override\r\n            public void onError(FacebookException error) {\r\n                Log.d(FTAG, \"facebook:onError\", error);\r\n            }\r\n        });\r\n        // [END initialize_fblogin]\r\n    }\r\n\r\n\r\n    private void handleFacebookAccessToken(AccessToken token) {\r\n        Log.d(FTAG, \"handleFacebookAccessToken:\" + token);\r\n\r\n        AuthCredential credential = FacebookAuthProvider.getCredential(token.getToken());\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(FTAG, \"signInWithCredential:success\");\r\n                            FirebaseUser user = mAuth.getCurrentUser();\r\n                            updateUI(user);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(FTAG, \"signInWithCredential:failure\", task.getException());\r\n                            Toast.makeText(getActivity(), \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                            updateUI(null);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Sign/Login_Fragment.java	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/java/com/example/graduationproject/Sign/Login_Fragment.java	(date 1622838398872)
@@ -87,6 +87,7 @@
     FirebaseAuth.AuthStateListener mAuthListener;
     User userData = new User();
     private CallbackManager mCallbackManager;
+    public boolean IdToken ;
 
 
     public Login_Fragment() {
@@ -315,20 +316,24 @@
             /*------------ If user's email is verified then access login -----------*/
             if (user.isEmailVerified()) {
                 String name = user.getDisplayName();
-                Toast.makeText(getActivity(), "Login Success." + name,
-                        Toast.LENGTH_SHORT).show();
+
+                Log.d("555555","Login Success." +"/" + user.isEmailVerified() +"/" +name);
 
                 startActivity(new Intent(getActivity(), MainActivity.class));
+                //Toast.makeText(getActivity(), "Login Success."  +name, Toast.LENGTH_SHORT).show();
             } else {
                 Toast.makeText(getActivity(), "Your Email is not verified.",
                         Toast.LENGTH_SHORT).show();
+                Log.d("555556","Login Success." +"/" + user.isEmailVerified() +"/" );
+
+                startActivity(new Intent(getActivity(), MainActivity.class));
             }
         } else {
             Toast.makeText(getActivity(), "Welcome , none :)",
                     Toast.LENGTH_SHORT).show();
         }
         /*-------- Check if G user is already logged in or not--------*/
-        if (user != null) {
+        if (user != null && IdToken) {
             String name = user.getDisplayName();
             Toast.makeText(getActivity(), "Google or Facebook Login Success." + name,
                     Toast.LENGTH_SHORT).show();
@@ -418,6 +423,7 @@
                             // Sign in success, update UI with the signed-in user's information
                             Log.d(TAG, "signInWithCredential:success");
                             FirebaseUser user = mAuth.getCurrentUser();
+                            IdToken =true;
                             updateUI(user);
                         } else {
                             // If sign in fails, display a message to the user.
@@ -585,6 +591,7 @@
                             // Sign in success, update UI with the signed-in user's information
                             Log.d(FTAG, "signInWithCredential:success");
                             FirebaseUser user = mAuth.getCurrentUser();
+                            IdToken = true;
                             updateUI(user);
                         } else {
                             // If sign in fails, display a message to the user.
Index: app/src/main/java/com/example/graduationproject/Sign/SignUp_Fragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Sign;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.ColorStateList;\r\nimport android.content.res.XmlResourceParser;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.example.graduationproject.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.UserProfileChangeRequest;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.annotations.Nullable;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\n\r\npublic class SignUp_Fragment extends Fragment implements OnClickListener {\r\n    private static final String TAG = SignUp_Fragment.class.getName();\r\n    public static String uid;\r\n    private static View view;\r\n    private static EditText fullName, emailId, mobileNumber, //location,\r\n            password, confirmPassword;\r\n    private static Spinner location;\r\n    //  private static Spinner dropdown;\r\n    private static TextView login;\r\n    private static Button signUpButton;\r\n    private static CheckBox terms_conditions;\r\n    public FirebaseAuth mAuth;\r\n    public Uri generatedFilePathURI;\r\n    public FirebaseUser firebaseUser;\r\n    public FirebaseDatabase database;\r\n    public DatabaseReference myRef;\r\n    ImageView user_profile;\r\n    DatabaseReference databaseReference;\r\n    Uri image_uri;\r\n    // instance for firebase storage and StorageReference\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    User user = new User();\r\n    //\r\n\r\n    public SignUp_Fragment() {\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.signup_layout, container, false);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        initViews();\r\n        setListeners();\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        // Check if user is signed in (non-null) and update UI accordingly.\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n\r\n        //new SignMainActivity().replaceLoginFragment();\r\n    }\r\n\r\n\r\n    // Initialize all views\r\n    private void initViews() {\r\n        fullName = view.findViewById(R.id.fullName);\r\n        emailId = view.findViewById(R.id.userEmailId);\r\n        mobileNumber = view.findViewById(R.id.mobileNumber);\r\n        location = view.findViewById(R.id.spinner);\r\n        password = view.findViewById(R.id.password);\r\n        confirmPassword = view.findViewById(R.id.confirmPassword);\r\n        signUpButton = view.findViewById(R.id.signUpBtn);\r\n        login = view.findViewById(R.id.already_user);\r\n//\t\tterms_conditions = (CheckBox) view.findViewById(R.id.terms_conditions);\r\n        user_profile = view.findViewById(R.id.add_pic);\r\n        //   dropdown = view.findViewById(R.id.spinner);\r\n\r\n        //create a list of items for the spinner.\r\n        String[] items = new String[]{\"Choose Your Location\", \"Alexandria\", \"Aswan\", \"Asyut\", \"Beheira\", \"Beni Suef\", \"Cairo\", \"Dakahlia\", \"Damietta\", \"Faiyum\", \"Gharbia\", \"Giza\", \"Ismailia\", \"Kafr El Sheikh\", \"Luxor\", \"Matruh\", \"Minya\", \"Monufia\", \"New Valley\", \"North Sinai\", \"Port Said\", \"Qalyubia\", \"Qena\", \"Red Sea\", \"Sharqia\", \"Sohag\", \"South Sinai\", \"Suez\"};\r\n\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_dropdown_item, items);\r\n        location.setAdapter(adapter);\r\n\r\n        // Setting text selector over textviews\r\n        @SuppressLint(\"ResourceType\") XmlResourceParser xrp = getResources().getXml(R.drawable.text_selector);\r\n        try {\r\n            ColorStateList csl = ColorStateList.createFromXml(getResources(),\r\n                    xrp);\r\n\r\n            login.setTextColor(csl);\r\n//\t\t\tterms_conditions.setTextColor(csl);\r\n        } catch (Exception e) {\r\n            Toast.makeText(getActivity(), e + \" \", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    /////////////for saving all data in realetime data base/////////////////////// , String photo, String name, String email, String phone, String location, String password\r\n\r\n    /*public void getImageFromStorageDB(){\r\n\r\n\r\n        File localFile = File.createTempFile(\"images\", \"jpg\");\r\n        riversRef.getFile(localFile)\r\n                .addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {\r\n                        // Successfully downloaded data to local file\r\n                        // ...\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception exception) {\r\n                // Handle failed download\r\n                // ...\r\n            }\r\n        });\r\n    }\r\n\r\n     */\r\n\r\n    public void saveToRealFirebase(String uid, String name, String email, String phone, String location, String password) {\r\n        //saveToRealFirebase(String uid, Uri uri, String name, String email, String phone, String location, String password)\r\n        //User user = new User();\r\n        user.setEmail(email);\r\n        //user.setUri(uri);\r\n        user.setLocation(location);\r\n        user.setPhone(phone);\r\n        user.setPassword(password);\r\n        user.setName(name);\r\n        user.setid(uid);\r\n\r\n\r\n        //FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        database = FirebaseDatabase.getInstance();\r\n        //DatabaseReference myRef = database.getReference(\"Users\").child(uid);\r\n        myRef = database.getReference(\"Users\").child(uid);\r\n        databaseReference = myRef;\r\n\r\n        myRef.child(\"id\").setValue(user.getid());\r\n        myRef.child(\"email\").setValue(user.getEmail());\r\n        //myRef.child(\"uri\").setValue(user.getUri().toString());\r\n        myRef.child(\"location\").setValue(user.getLocation());\r\n        myRef.child(\"phone\").setValue(user.getPhone());\r\n        myRef.child(\"pass\").setValue(user.getPassword());\r\n        myRef.child(\"name\").setValue(user.getName());\r\n\r\n    }\r\n\r\n\r\n    // Set Listeners\r\n    private void setListeners() {\r\n        signUpButton.setOnClickListener(this);\r\n        login.setOnClickListener(this);\r\n        user_profile.setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                /*\r\n                Intent takePicture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                startActivityForResult(takePicture, 0);//zero can be replaced with any action code (called requestCode)\r\n\r\n                Intent pickPhoto = new Intent(Intent.ACTION_PICK,\r\n                        android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(pickPhoto , 1);//one can be replaced with any action code\r\n                */\r\n\r\n                SelectProfilePic();\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.signUpBtn:\r\n\r\n                // Call checkValidation method\r\n                checkValidation();\r\n                break;\r\n\r\n            case R.id.already_user:\r\n\r\n                // Replace login fragment\r\n                new SignMainActivity().replaceLoginFragment();\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    // Check Validation Method\r\n    private void checkValidation() {\r\n\r\n        // Get all edittext texts\r\n        String getFullName = fullName.getText().toString();\r\n        String getEmailId = emailId.getText().toString();\r\n        String getMobileNumber = mobileNumber.getText().toString();\r\n        String getLocation = location.getSelectedItem().toString();\r\n        String getPassword = password.getText().toString();\r\n        String getConfirmPassword = confirmPassword.getText().toString();\r\n\r\n\r\n        // Pattern match for email id\r\n        Pattern p = Pattern.compile(Utils.regEx);\r\n        Matcher m = p.matcher(getEmailId);\r\n\r\n        // Check if all strings are null or not\r\n        if (getFullName.equals(\"\") || getFullName.length() == 0\r\n                || getEmailId.equals(\"\") || getEmailId.length() == 0\r\n                || getMobileNumber.equals(\"\") || getMobileNumber.length() == 0\r\n                || getLocation.equals(\"Choose Your Location\") || location.getSelectedItemPosition() == 0\r\n                || getPassword.equals(\"\") || getPassword.length() == 0\r\n                || getConfirmPassword.equals(\"\")\r\n                || getConfirmPassword.length() == 0) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"All fields are required.\");\r\n        }\r\n\r\n        // Check if email id valid or not\r\n        else if (!m.find()) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Your Email Id is Invalid.\");\r\n        }\r\n        // Check if both password should be equal\r\n        else if (!getConfirmPassword.equals(getPassword)) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Both password doesn't match.\");\r\n        }\r\n        // Check if pass > 6\r\n        else if (getPassword.length() < 6) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Password should be at least 6 characters\");\r\n        } else if (image_uri == null) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"choose a profile image\");\r\n        }\r\n        /*else if (mobileNumber.length() != 11) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Mobile should be 11 Numbers\");\r\n        }\r\n\r\n         */\r\n        /*\r\n\t\t// Make sure user should check Terms and Conditions checkbox\r\n\t\telse if (!terms_conditions.isChecked())\r\n\t\t\tnew CustomToast().Show_Toast(getActivity(), view,\r\n\t\t\t\t\t\"Please select Terms and Conditions.\");*/\r\n\r\n        // Else do signup or do your stuff\r\n        else {\r\n            //createAccount(getEmailId, getPassword);\r\n            createAccount(getEmailId, getPassword, getMobileNumber, getLocation, getFullName);\r\n            //userProfile(getFullName);\r\n\t\t\t/*Toast.makeText(getActivity(), \"welcome (\" + getFullName + \")\", Toast.LENGTH_SHORT)\r\n\t\t\t\t\t.show();\r\n\r\n\t\t\t */\r\n            // Replace login fragment\r\n            //new SignMainActivity().replaceLoginFragment();\r\n        }\r\n    }\r\n\r\n    // UploadImage method\r\n    public void uploadImage() {\r\n        if (image_uri != null) {\r\n\r\n            // Code for showing progressDialog while uploading\r\n            final ProgressDialog progressDialog\r\n                    = new ProgressDialog(getActivity());\r\n            progressDialog.setTitle(\"Uploading...\");\r\n\r\n            progressDialog.show();\r\n            progressDialog.setCanceledOnTouchOutside(false);\r\n            progressDialog.setCancelable(false);\r\n\r\n            // Defining the child of storageReference\r\n            storageReference = FirebaseStorage.getInstance().getReference();\r\n            final StorageReference ref\r\n                    = storageReference\r\n                    .child(\"images/\").child(uid + \"/UserImage\");\r\n\r\n            // adding listeners on upload\r\n            // or failure of image\r\n            generatedFilePathURI = image_uri;\r\n            Log.d(\"urlll1\", generatedFilePathURI + \"\");\r\n            UploadTask uploadTask = ref.putFile(image_uri);\r\n            ref.putFile(image_uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(\r\n                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                    // Image uploaded successfully\r\n                    // Dismiss dialog\r\n                    ref.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            //Now play with downloadPhotoUrl\r\n                            //Store data into Firebase Realtime Database\r\n                            generatedFilePathURI = uri;\r\n                            Log.d(\"urlll\", generatedFilePathURI + \"\");\r\n                            imageToRealFirebase(generatedFilePathURI);\r\n\r\n\r\n                        }\r\n                    });\r\n                                   /* uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n                                        @Override\r\n                                        public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n                                            if (!task.isSuccessful()) {\r\n                                                throw task.getException();\r\n\r\n                                            }\r\n                                            // Continue with the task to get the download URL\r\n                                            return ref.getDownloadUrl();\r\n                                        }\r\n                                    }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<Uri> task) {\r\n                                            if (task.isSuccessful()) {\r\n\r\n                                                generatedFilePathURI = task.getResult();\r\n                                                Log.d(\"urlll\",generatedFilePathURI + \"\");\r\n\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                    */\r\n                    progressDialog.dismiss();\r\n                    Toast.makeText(getActivity(), \"Image Uploaded!!\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                }\r\n            })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n\r\n                            // Error, Image not uploaded\r\n                            progressDialog.dismiss();\r\n                            Toast\r\n                                    .makeText(getActivity(),\r\n                                            \"Failed \" + e.getMessage(),\r\n                                            Toast.LENGTH_SHORT)\r\n                                    .show();\r\n                        }\r\n                    })\r\n                    .addOnProgressListener(\r\n                            new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n\r\n                                // Progress Listener for loading\r\n                                // percentage on the dialog box\r\n                                @Override\r\n                                public void onProgress(\r\n                                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                                    double progress\r\n                                            = (100.0\r\n                                            * taskSnapshot.getBytesTransferred()\r\n                                            / taskSnapshot.getTotalByteCount());\r\n                                    progressDialog.setMessage(\r\n                                            \"Uploaded \"\r\n                                                    + (int) progress + \"%\");\r\n                                }\r\n                            });\r\n        }\r\n    }\r\n\r\n\r\n    public void createAccount(final String email, final String password, final String phone, final String location, final String name) {\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"createUserWithEmail:success\");\r\n                            firebaseUser = mAuth.getCurrentUser();\r\n                            uid = firebaseUser.getUid();\r\n                            // Toast.makeText(getActivity(), \"3 \", Toast.LENGTH_SHORT).show();\r\n                            uploadImage();\r\n\r\n                            //Toast.makeText(getActivity(), generatedFilePathURI.toString() , Toast.LENGTH_SHORT).show();\r\n                            // Toast.makeText(getActivity(), \"2 \", Toast.LENGTH_SHORT).show();\r\n                            Log.d(\"urlll2\", generatedFilePathURI.toString());\r\n                            saveToRealFirebase(uid, name, email, phone, location, password);\r\n                            //saveToRealFirebase(uid, generatedFilePathURI, name, email, phone, location, password);\r\n                            //Toast.makeText(getActivity(), \"1 \", Toast.LENGTH_SHORT).show();\r\n                            Toast.makeText(getActivity(), \"Sign up success \" + uid, Toast.LENGTH_SHORT).show();\r\n                            userProfile(name);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                            Toast.makeText(getActivity(), \"Sign up failed: \" + task.getException().toString(), Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n\r\n                        // ...\r\n                        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /*----------For saving image and user name in Auth Firebase Database-------*/\r\n\r\n    public void userProfile(String name) {\r\n        firebaseUser = mAuth.getCurrentUser();\r\n        if (firebaseUser != null) {\r\n            UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()\r\n                    .setDisplayName(name).setPhotoUri(generatedFilePathURI).build();\r\n            firebaseUser.updateProfile(profileUpdates).addOnCompleteListener(getActivity(), new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    verifyEmailRequest();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /*-------For sending verification email on user's registered email------*/\r\n    private void verifyEmailRequest() {\r\n        firebaseUser.sendEmailVerification()\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        if (task.isSuccessful()) {\r\n                            Toast.makeText(getActivity(), \"Email verification sent on\\n\" + emailId.getText().toString(), Toast.LENGTH_LONG).show();\r\n                            //mAuth.signOut();\r\n                            //startActivity(new Intent(getActivity(),SignMainActivity.class));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Sign up Success But Failed to send verification email.\", Toast.LENGTH_LONG).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    /*-------- Below Code is for selecting image from galary or camera -----------*/\r\n    private void SelectProfilePic() {\r\n        final CharSequence[] options = {\"Take Photo\", \"Choose from Gallery\", \"Cancel\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n        builder.setTitle(\"Add Photo!\");\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                        if (getActivity().checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED ||\r\n                                getActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_DENIED) {\r\n                            String[] permission = {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                            requestPermissions(permission, 1000);\r\n                        } else {\r\n                            openCamera();\r\n                        }\r\n                    } else {\r\n                        openCamera();\r\n                    }\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n\r\n                    Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);\r\n\r\n                    startActivityForResult(intent, 2);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n\r\n                    dialog.dismiss();\r\n\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n\r\n    }\r\n\r\n    private void openCamera() {\r\n        ContentValues values = new ContentValues();\r\n        values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n        values.put(MediaStore.Images.Media.DESCRIPTION, \"From Camera\");\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n\r\n        //Camera intent\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n        startActivityForResult(takePictureIntent, 1);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch (requestCode) {\r\n            case 1000:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    openCamera();\r\n                } else {\r\n                    //permisiion from pop up was denied.\r\n                    Toast.makeText(getActivity(), \"Permission Denied...\", Toast.LENGTH_LONG).show();\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        // Result code is RESULT_OK only if the user selects an Image\r\n        if (resultCode == Activity.RESULT_OK) {\r\n            switch (requestCode) {\r\n                case 1:\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(user_profile);\r\n                    //Toast.makeText(getActivity(),\"case 1 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case 2:\r\n                    //data.getData returns the content URI for the selected Image\r\n                    image_uri = data.getData();\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(user_profile);\r\n                    //Toast.makeText(getActivity(),\"case 2 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    ///////////////////save image url in realtime database /////////////\r\n    public void imageToRealFirebase(Uri uri) {\r\n        user.setUri(uri);\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        myRef = database.getReference(\"Users\").child(uid);\r\n        myRef.child(\"uri\").setValue(user.getUri().toString());\r\n    }\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Sign/SignUp_Fragment.java	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ app/src/main/java/com/example/graduationproject/Sign/SignUp_Fragment.java	(date 1622868197172)
@@ -5,15 +5,22 @@
 import android.app.Activity;
 import android.app.AlertDialog;
 import android.app.ProgressDialog;
+import android.content.ContentUris;
 import android.content.ContentValues;
+import android.content.Context;
 import android.content.DialogInterface;
 import android.content.Intent;
 import android.content.pm.PackageManager;
 import android.content.res.ColorStateList;
 import android.content.res.XmlResourceParser;
+import android.database.Cursor;
+import android.graphics.Bitmap;
+import android.graphics.Matrix;
 import android.net.Uri;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Environment;
+import android.provider.DocumentsContract;
 import android.provider.MediaStore;
 import android.util.Log;
 import android.view.LayoutInflater;
@@ -30,6 +37,7 @@
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
+import androidx.exifinterface.media.ExifInterface;
 import androidx.fragment.app.Fragment;
 
 import com.bumptech.glide.Glide;
@@ -51,6 +59,8 @@
 import com.google.firebase.storage.StorageReference;
 import com.google.firebase.storage.UploadTask;
 
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
@@ -189,6 +199,7 @@
         myRef.child("pass").setValue(user.getPassword());
         myRef.child("name").setValue(user.getName());
 
+
     }
 
 
@@ -279,12 +290,12 @@
             new CustomToast().Show_Toast(getActivity(), view,
                     "choose a profile image");
         }
-        /*else if (mobileNumber.length() != 11) {
+        else if (mobileNumber.length() != 11) {
             new CustomToast().Show_Toast(getActivity(), view,
                     "Mobile should be 11 Numbers");
         }
 
-         */
+
         /*
 		// Make sure user should check Terms and Conditions checkbox
 		else if (!terms_conditions.isChecked())
@@ -320,16 +331,25 @@
 
             // Defining the child of storageReference
             storageReference = FirebaseStorage.getInstance().getReference();
-            final StorageReference ref
-                    = storageReference
-                    .child("images/").child(uid + "/UserImage");
+            final StorageReference ref = storageReference.child("images/").child(uid + "/UserImage");
 
             // adding listeners on upload
             // or failure of image
             generatedFilePathURI = image_uri;
+            byte[] data = new byte[0];
+            try {
+                Bitmap bmp = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), image_uri);
+                bmp = modifyOrientation(bmp,getPath(getContext(),image_uri));
+                ByteArrayOutputStream baos = new ByteArrayOutputStream();
+                bmp.compress(Bitmap.CompressFormat.JPEG, 50, baos);
+                data = baos.toByteArray();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+
             Log.d("urlll1", generatedFilePathURI + "");
-            UploadTask uploadTask = ref.putFile(image_uri);
-            ref.putFile(image_uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
+            UploadTask uploadTask = ref.putBytes(data);//ref.putFile(image_uri);
+            ref.putBytes(data).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {
                 @Override
                 public void onSuccess(
                         UploadTask.TaskSnapshot taskSnapshot) {
@@ -344,6 +364,8 @@
                             Log.d("urlll", generatedFilePathURI + "");
                             imageToRealFirebase(generatedFilePathURI);
 
+                            progressDialog.dismiss();
+                            Toast.makeText(getActivity(), "Image Uploaded!!", Toast.LENGTH_SHORT).show();
 
                         }
                     });
@@ -371,8 +393,7 @@
                                     });
 
                                     */
-                    progressDialog.dismiss();
-                    Toast.makeText(getActivity(), "Image Uploaded!!", Toast.LENGTH_SHORT).show();
+
 
 
                 }
@@ -474,8 +495,8 @@
                     public void onComplete(@NonNull Task<Void> task) {
                         if (task.isSuccessful()) {
                             Toast.makeText(getActivity(), "Email verification sent on\n" + emailId.getText().toString(), Toast.LENGTH_LONG).show();
-                            //mAuth.signOut();
-                            //startActivity(new Intent(getActivity(),SignMainActivity.class));
+                            mAuth.signOut();
+                            startActivity(new Intent(getActivity(),SignMainActivity.class));
                         } else {
                             Toast.makeText(getActivity(), "Sign up Success But Failed to send verification email.", Toast.LENGTH_LONG).show();
                         }
@@ -557,6 +578,7 @@
                     Glide.with(getActivity())
                             .load(image_uri)
                             .centerCrop()
+                            .fitCenter()
                             .diskCacheStrategy(DiskCacheStrategy.NONE)
                             .skipMemoryCache(true)
                             .placeholder(R.drawable.person_24)
@@ -570,6 +592,7 @@
                     Glide.with(getActivity())
                             .load(image_uri)
                             .centerCrop()
+                            .fitCenter()
                             .diskCacheStrategy(DiskCacheStrategy.NONE)
                             .skipMemoryCache(true)
                             .placeholder(R.drawable.person_24)
@@ -589,6 +612,147 @@
         myRef.child("uri").setValue(user.getUri().toString());
     }
 
+    ////////////////////////////////////////////////////////////////////////////
+    ////////////// image uri to bitmap ///////////////
+
+    public static String getPath(final Context context, final Uri uri) {
+
+        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;
+
+        // DocumentProvider
+        if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {
+            // ExternalStorageProvider
+            if (isExternalStorageDocument(uri)) {
+                final String docId = DocumentsContract.getDocumentId(uri);
+                final String[] split = docId.split(":");
+                final String type = split[0];
+
+                if ("primary".equalsIgnoreCase(type)) {
+                    return Environment.getExternalStorageDirectory() + "/" + split[1];
+                }
+
+                // TODO handle non-primary volumes
+            }
+            // DownloadsProvider
+            else if (isDownloadsDocument(uri)) {
+
+                final String id = DocumentsContract.getDocumentId(uri);
+                final Uri contentUri = ContentUris.withAppendedId(
+                        Uri.parse("content://downloads/public_downloads"), Long.valueOf(id));
+
+                return getDataColumn(context, contentUri, null, null);
+            }
+            // MediaProvider
+            else if (isMediaDocument(uri)) {
+                final String docId = DocumentsContract.getDocumentId(uri);
+                final String[] split = docId.split(":");
+                final String type = split[0];
+
+                Uri contentUri = null;
+                if ("image".equals(type)) {
+                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;
+                } else if ("video".equals(type)) {
+                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;
+                } else if ("audio".equals(type)) {
+                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
+                }
+
+                final String selection = "_id=?";
+                final String[] selectionArgs = new String[] {
+                        split[1]
+                };
+
+                return getDataColumn(context, contentUri, selection, selectionArgs);
+            }
+        }
+        // MediaStore (and general)
+        else if ("content".equalsIgnoreCase(uri.getScheme())) {
+            return getDataColumn(context, uri, null, null);
+        }
+        // File
+        else if ("file".equalsIgnoreCase(uri.getScheme())) {
+            return uri.getPath();
+        }
+
+        return null;
+    }
+
+    public static String getDataColumn(Context context, Uri uri, String selection,
+                                       String[] selectionArgs) {
+
+        Cursor cursor = null;
+        final String column = "_data";
+        final String[] projection = {
+                column
+        };
+
+        try {
+            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,
+                    null);
+            if (cursor != null && cursor.moveToFirst()) {
+                final int column_index = cursor.getColumnIndexOrThrow(column);
+                return cursor.getString(column_index);
+            }
+        } finally {
+            if (cursor != null)
+                cursor.close();
+        }
+        return null;
+    }
+
+    public static boolean isExternalStorageDocument(Uri uri) {
+        return "com.android.externalstorage.documents".equals(uri.getAuthority());
+    }
+
+    public static boolean isDownloadsDocument(Uri uri) {
+        return "com.android.providers.downloads.documents".equals(uri.getAuthority());
+    }
+
+    public static boolean isMediaDocument(Uri uri) {
+        return "com.android.providers.media.documents".equals(uri.getAuthority());
+    }
+
+    ////////////////////////////////oriantation
+
+    public static Bitmap modifyOrientation(Bitmap bitmap, String image_absolute_path) throws IOException {
+        ExifInterface ei = new ExifInterface(image_absolute_path);
+        int orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);
+
+        switch (orientation) {
+            case ExifInterface.ORIENTATION_ROTATE_90:
+                return rotate(bitmap, 90);
+
+            case ExifInterface.ORIENTATION_ROTATE_180:
+                return rotate(bitmap, 180);
+
+            case ExifInterface.ORIENTATION_ROTATE_270:
+                return rotate(bitmap, 270);
+
+            case ExifInterface.ORIENTATION_FLIP_HORIZONTAL:
+                return flip(bitmap, true, false);
+
+            case ExifInterface.ORIENTATION_FLIP_VERTICAL:
+                return flip(bitmap, false, true);
+
+            default:
+                return bitmap;
+        }
+    }
+
+    public static Bitmap rotate(Bitmap bitmap, float degrees) {
+        Matrix matrix = new Matrix();
+        matrix.postRotate(degrees);
+        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
+    }
+
+    public static Bitmap flip(Bitmap bitmap, boolean horizontal, boolean vertical) {
+        Matrix matrix = new Matrix();
+        matrix.preScale(horizontal ? -1 : 1, vertical ? -1 : 1);
+        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////////////
+
 
 }
 
Index: app/src/main/res/drawable/ic_baseline_delete_forever_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/ic_baseline_delete_forever_24.xml	(date 1622860623235)
+++ app/src/main/res/drawable/ic_baseline_delete_forever_24.xml	(date 1622860623235)
@@ -0,0 +1,5 @@
+<vector android:height="24dp" android:tint="#9F0808"
+    android:viewportHeight="24" android:viewportWidth="24"
+    android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
+    <path android:fillColor="@android:color/white" android:pathData="M6,19c0,1.1 0.9,2 2,2h8c1.1,0 2,-0.9 2,-2L18,7L6,7v12zM8.46,11.88l1.41,-1.41L12,12.59l2.12,-2.12 1.41,1.41L13.41,14l2.12,2.12 -1.41,1.41L12,15.41l-2.12,2.12 -1.41,-1.41L10.59,14l-2.13,-2.12zM15.5,4l-1,-1h-5l-1,1L5,4v2h14L19,4z"/>
+</vector>
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 3c1b5a637b31cee0b7836740ad397a95f08e2630)
+++ .idea/compiler.xml	(date 1622842356126)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="1.8" />
+    <bytecodeTargetLevel target="11" />
   </component>
 </project>
\ No newline at end of file
