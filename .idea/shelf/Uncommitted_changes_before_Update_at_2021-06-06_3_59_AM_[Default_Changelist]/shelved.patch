Index: app/src/main/res/layout/signup_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"fill_parent\"\r\n        android:orientation=\"vertical\"\r\n        android:padding=\"20dp\">\r\n\r\n        <TextView\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"10dp\"\r\n            android:text=\"@string/signUp\"\r\n            android:textColor=\"@color/white_greyish\"\r\n            android:textSize=\"25sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <androidx.cardview.widget.CardView\r\n            android:id=\"@+id/circleview\"\r\n            android:layout_width=\"84dp\"\r\n            android:layout_height=\"84dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"20dp\"\r\n            app:cardBackgroundColor=\"@color/background_color\"\r\n            app:cardCornerRadius=\"42dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n            <androidx.cardview.widget.CardView\r\n                android:layout_width=\"80dp\"\r\n                android:layout_height=\"80dp\"\r\n                android:layout_gravity=\"center\"\r\n                app:cardBackgroundColor=\"#FFF9F9F9\"\r\n                app:cardCornerRadius=\"40dp\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/add_pic\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"match_parent\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:scaleType=\"centerCrop\"\r\n                    android:src=\"@drawable/add_pic\" />\r\n\r\n            </androidx.cardview.widget.CardView>\r\n        </androidx.cardview.widget.CardView>\r\n\r\n\r\n        <EditText\r\n            android:id=\"@+id/fullName\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/user\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/fullName\"\r\n            android:inputType=\"textCapWords\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/userEmailId\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/email\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/email\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/mobileNumber\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/phone\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/mobileNumber\"\r\n            android:inputType=\"phone\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <TableRow\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <ImageView\r\n                android:layout_width=\"wrap_content\"\r\n                android:contentDescription=\"@string/location\"\r\n                android:paddingStart=\"6dp\"\r\n                android:paddingTop=\"12dp\"\r\n                android:src=\"@drawable/location\"\r\n                tools:ignore=\"RtlSymmetry\" />\r\n\r\n\r\n            <Spinner\r\n                android:id=\"@+id/spinner\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@android:color/transparent\"\r\n                android:gravity=\"center_vertical\"\r\n                android:spinnerMode=\"dialog\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"15sp\" />\r\n\r\n        </TableRow>\r\n\r\n        <!--<View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/location\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/location\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/location\"\r\n            android:inputType=\"none\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:visibility=\"visible\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />-->\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/password\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/password\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/passowrd\"\r\n            android:inputType=\"textPassword\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/confirmPassword\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/confirm_password\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/confirmPassword\"\r\n            android:inputType=\"textPassword\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <!-- <CheckBox\r\n             android:id=\"@+id/terms_conditions\"\r\n             android:layout_width=\"wrap_content\"\r\n             android:layout_height=\"wrap_content\"\r\n             android:layout_marginTop=\"7dp\"\r\n             android:text=\"@string/terms_conditions\"\r\n             android:textColor=\"@color/white\"\r\n             android:textSize=\"14sp\" />-->\r\n\r\n        <Button\r\n            android:id=\"@+id/signUpBtn\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"15dp\"\r\n            android:background=\"@drawable/loginbutton_selector\"\r\n            android:padding=\"3dp\"\r\n            android:text=\"@string/signUp\"\r\n            android:textColor=\"@color/background_color\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/already_user\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            android:layout_marginTop=\"5dp\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"10dp\"\r\n            android:text=\"@string/already_user\"\r\n            android:textColor=\"@color/white_greyish\"\r\n            android:textSize=\"15sp\" />\r\n\r\n    </LinearLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/signup_layout.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/layout/signup_layout.xml	(date 1622941339239)
@@ -7,26 +7,18 @@
 
     <LinearLayout
         android:layout_width="fill_parent"
-        android:layout_height="fill_parent"
+        android:layout_height="wrap_content"
         android:orientation="vertical"
         android:padding="20dp">
 
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:gravity="center"
-            android:padding="10dp"
-            android:text="@string/signUp"
-            android:textColor="@color/white_greyish"
-            android:textSize="25sp"
-            android:textStyle="bold" />
 
         <androidx.cardview.widget.CardView
             android:id="@+id/circleview"
             android:layout_width="84dp"
             android:layout_height="84dp"
             android:layout_gravity="center"
-            android:layout_marginTop="20dp"
+            android:layout_marginTop="55dp"
+            android:layout_marginBottom="25dp"
             app:cardBackgroundColor="@color/background_color"
             app:cardCornerRadius="42dp"
             app:layout_constraintEnd_toEndOf="parent"
@@ -79,6 +71,7 @@
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:layout_marginTop="5dp"
+            android:paddingLeft="@dimen/_3sdp"
             android:background="@android:color/transparent"
             android:drawableLeft="@drawable/email"
             android:drawablePadding="8dp"
@@ -121,13 +114,13 @@
         <TableRow
             android:layout_width="match_parent"
             android:layout_height="match_parent"
+            android:layout_marginTop="5dp"
             android:orientation="horizontal">
 
             <ImageView
                 android:layout_width="wrap_content"
                 android:contentDescription="@string/location"
-                android:paddingStart="6dp"
-                android:paddingTop="12dp"
+                android:padding="@dimen/_7sdp"
                 android:src="@drawable/location"
                 tools:ignore="RtlSymmetry" />
 
@@ -225,7 +218,7 @@
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:layout_marginTop="15dp"
-            android:background="@drawable/loginbutton_selector"
+            android:background="@drawable/rounded_corner"
             android:padding="3dp"
             android:text="@string/signUp"
             android:textColor="@color/background_color"
@@ -241,7 +234,7 @@
             android:gravity="center"
             android:padding="10dp"
             android:text="@string/already_user"
-            android:textColor="@color/white_greyish"
+            android:textColor="@color/blue"
             android:textSize="15sp" />
 
     </LinearLayout>
Index: app/src/main/res/layout/login_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    >\r\n\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:padding=\"20dp\">\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/login_layout\"\r\n        android:layout_width=\"fill_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_margin=\"10dp\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <TextView\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginBottom=\"120dp\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"10dp\"\r\n            android:text=\"@string/login\"\r\n            android:textColor=\"@color/white_greyish\"\r\n            android:textSize=\"25sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/login_emailid\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"20dp\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/email\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/email\"\r\n            android:inputType=\"textEmailAddress\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <View\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"1px\"\r\n            android:background=\"@color/white_greyish\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/login_password\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@android:color/transparent\"\r\n            android:drawableLeft=\"@drawable/password\"\r\n            android:drawablePadding=\"8dp\"\r\n            android:gravity=\"center_vertical\"\r\n            android:hint=\"@string/passowrd\"\r\n            android:inputType=\"textPassword\"\r\n            android:padding=\"10dp\"\r\n            android:singleLine=\"true\"\r\n            android:textColor=\"@color/white\"\r\n            android:textColorHint=\"@color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            android:paddingTop=\"8dp\"\r\n            android:paddingBottom=\"5dp\">\r\n\r\n            <CheckBox\r\n                android:id=\"@+id/show_hide_password\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"@string/show_pwd\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"14sp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/forgot_password\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:gravity=\"end\"\r\n                android:padding=\"5dp\"\r\n                android:text=\"@string/forgot\"\r\n                android:textColor=\"@color/white\"\r\n                android:textSize=\"14sp\" />\r\n        </LinearLayout>\r\n\r\n        <Button\r\n            android:id=\"@+id/loginBtn\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"13dp\"\r\n            android:background=\"@drawable/loginbutton_selector\"\r\n            android:padding=\"3dp\"\r\n            android:text=\"@string/login\"\r\n            android:textColor=\"#009688\"\r\n            android:textSize=\"17sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n<!--            android:text=\"@string/log_in_with\"-->\r\n<!--            android:text=\"@string/log_in_with\"-->\r\n\r\n            <Button\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_marginTop=\"@dimen/_8ssp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:textColor=\"#009688\"\r\n                android:layout_marginBottom=\"20dp\"\r\n                android:layout_margin=\"@dimen/_5sdp\"\r\n                android:layout_weight=\"1\"\r\n                android:background=\"@android:color/transparent\"\r\n                android:drawableEnd=\"@drawable/ic_google\"\r\n                android:paddingStart=\"30dp\"\r\n                android:paddingEnd=\"30dp\"\r\n                android:textAllCaps=\"false\"\r\n                android:textSize=\"16sp\"\r\n                android:id=\"@+id/google\" />\r\n            <FrameLayout\r\n                android:layout_below=\"@+id/no_network_bar\"\r\n                android:id=\"@+id/FrameLayout1\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                >\r\n\r\n                <com.facebook.login.widget.LoginButton\r\n                    android:id=\"@+id/login_button\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:visibility=\"gone\" />\r\n\r\n                <Button\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_marginTop=\"@dimen/_8ssp\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_margin=\"@dimen/_5sdp\"\r\n                    android:textColor=\"#009688\"\r\n                    android:layout_marginBottom=\"20dp\"\r\n                    android:background=\"@android:color/transparent\"\r\n                    android:drawableEnd=\"@drawable/ic_baseline_facebook_24\"\r\n                    android:paddingStart=\"30dp\"\r\n                    android:paddingEnd=\"30dp\"\r\n                    android:textAllCaps=\"false\"\r\n                    android:textSize=\"16sp\"\r\n                    android:id=\"@+id/facebook\"/>\r\n            </FrameLayout>\r\n\r\n\r\n\r\n        </LinearLayout>\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/createAccount\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_below=\"@+id/login_layout\"\r\n            android:layout_centerHorizontal=\"true\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:gravity=\"center\"\r\n            android:padding=\"5dp\"\r\n            android:text=\"@string/newUser\"\r\n            android:textColor=\"@color/white\"\r\n            android:textSize=\"15sp\" />\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    </RelativeLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/login_layout.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/layout/login_layout.xml	(date 1622943933801)
@@ -16,16 +16,14 @@
         android:layout_margin="10dp"
         android:orientation="vertical">
 
-        <TextView
-            android:layout_width="fill_parent"
-            android:layout_height="wrap_content"
-            android:layout_marginBottom="120dp"
+        <ImageView
+            android:layout_width="@dimen/_132sdp"
+            android:layout_height="@dimen/_142sdp"
+            android:layout_marginBottom="40dp"
+            android:layout_gravity="center"
             android:gravity="center"
             android:padding="10dp"
-            android:text="@string/login"
-            android:textColor="@color/white_greyish"
-            android:textSize="25sp"
-            android:textStyle="bold" />
+            android:src="@drawable/logo2008" />
 
         <EditText
             android:id="@+id/login_emailid"
@@ -79,7 +77,8 @@
                 android:layout_height="wrap_content"
                 android:layout_weight="1"
                 android:text="@string/show_pwd"
-                android:textColor="@color/white"
+                android:buttonTint="@color/blue"
+                android:textColor="@color/blue"
                 android:textSize="14sp" />
 
             <TextView
@@ -99,10 +98,11 @@
             android:layout_width="fill_parent"
             android:layout_height="wrap_content"
             android:layout_marginTop="13dp"
-            android:background="@drawable/loginbutton_selector"
+            android:background="@drawable/rounded_corner"
+            android:layout_marginBottom="20dp"
             android:padding="3dp"
             android:text="@string/login"
-            android:textColor="#009688"
+            android:textColor="@color/blue"
             android:textSize="17sp"
             android:textStyle="bold" />
 
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"colorPrimary\">#1182BF</color>\r\n    <color name=\"colorPrimaryDark\">#1DA1E8</color>\r\n    <color name=\"colorAccent\">#03DAC5</color>\r\n    <color name=\"color\">#6ECDB2</color>\r\n    <color name=\"lightGray\">#D5E6DFDF</color>\r\n\r\n    <color name=\"blue\">#45a6de</color>\r\n    <color name=\"gray\">#626161</color>\r\n    <color name=\"light_Gray\">#f2f2f2</color>\r\n    <color name=\"white\">#FFFFFF</color>\r\n\r\n\r\n    <color name=\"background_color\">#009688</color>\r\n    <color name=\"black\">#000000</color>\r\n    <color name=\"white_greyish\">#EEEEEE</color>\r\n    <color name=\"button_selectorcolor\">#9E9E9E</color>\r\n\r\n    <color name=\"purple_200\">#FFBB86FC</color>\r\n    <color name=\"purple_500\">#FF6200EE</color>\r\n    <color name=\"purple_700\">#FF3700B3</color>\r\n    <color name=\"teal_200\">#FF03DAC5</color>\r\n    <color name=\"teal_700\">#FF018786</color>\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/values/colors.xml	(date 1622927258452)
@@ -9,10 +9,11 @@
     <color name="blue">#45a6de</color>
     <color name="gray">#626161</color>
     <color name="light_Gray">#f2f2f2</color>
-    <color name="white">#FFFFFF</color>
+    <color name="white">#626161</color>
+    <color name="whitee">#FFFFFF</color>
 
 
-    <color name="background_color">#009688</color>
+    <color name="background_color">#45a6de</color>
     <color name="black">#000000</color>
     <color name="white_greyish">#EEEEEE</color>
     <color name="button_selectorcolor">#9E9E9E</color>
Index: app/src/main/java/com/example/graduationproject/Sign/Login_Fragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Sign;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.res.ColorStateList;\r\nimport android.content.res.XmlResourceParser;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.text.InputType;\r\nimport android.text.method.HideReturnsTransformationMethod;\r\nimport android.text.method.PasswordTransformationMethod;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.CompoundButton.OnCheckedChangeListener;\r\nimport android.widget.EditText;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport com.example.graduationproject.Activities.MainActivity;\r\nimport com.example.graduationproject.R;\r\nimport com.facebook.AccessToken;\r\nimport com.facebook.CallbackManager;\r\nimport com.facebook.FacebookCallback;\r\nimport com.facebook.FacebookException;\r\nimport com.facebook.GraphRequest;\r\nimport com.facebook.GraphResponse;\r\nimport com.facebook.Profile;\r\nimport com.facebook.internal.ImageRequest;\r\nimport com.facebook.login.LoginResult;\r\nimport com.facebook.login.widget.LoginButton;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInClient;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FacebookAuthProvider;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class Login_Fragment extends Fragment implements OnClickListener {\r\n    private static final String TAG = \"GoogleActivity\";\r\n    private static final String FTAG = \"FacebookLogin\";\r\n    private static final int RC_SIGN_IN = 12345;\r\n    private static View view;\r\n    private static EditText emailid, password;\r\n    private static Button loginButton, faceBookBtn, googleBtn;\r\n    private static TextView forgotPassword, signUp;\r\n    private static CheckBox show_hide_password;\r\n    private static LinearLayout loginLayout;\r\n    private static Animation shakeAnimation;\r\n    private static FragmentManager fragmentManager;\r\n    private static LoginButton loginButtonF;\r\n    public GoogleSignInClient mGoogleSignInClient;\r\n    public FirebaseAuth mAuth;\r\n    public FirebaseUser user;\r\n    public String nameReal, idReal, emailReal;\r\n    public Uri uriReal;\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    FirebaseAuth.AuthStateListener mAuthListener;\r\n    User userData = new User();\r\n    private CallbackManager mCallbackManager;\r\n    public boolean IdTokenFlag;\r\n    public String IdToken,UserType;\r\n    public SharedPreferences pref;\r\n    public SharedPreferences.Editor editor;\r\n\r\n\r\n    public Login_Fragment() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.login_layout, container, false);\r\n\r\n        // Configure Google Sign In\r\n        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n\r\n        mGoogleSignInClient = GoogleSignIn.getClient(getActivity(), gso);\r\n\r\n\r\n        mCallbackManager = CallbackManager.Factory.create();\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n\r\n\r\n        pref = getActivity().getSharedPreferences(\"Token\",0);\r\n        editor = pref.edit();\r\n\r\n        IdToken = pref.getString(\"IdToken\", \"\");\r\n        Log.d(\"IdTokenCreate\",IdToken);\r\n        UserType = pref.getString(\"UserType\", \"\");\r\n        Log.d(\"IdTokenUserTypeCreate\",UserType);\r\n        IdTokenFlag = pref.getBoolean(\"IdTokenFlag\",false);\r\n        Log.d(\"IdTokenFlagCreate\",String.valueOf(IdTokenFlag));\r\n\r\n        initViews();\r\n        setListeners();\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n\r\n        mAuth = FirebaseAuth.getInstance();\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        // String ll = user.getUid() + \"$$\";\r\n        //  Log.d(\"5555555\",ll);\r\n        // Check if user or account is signed in (non-null) and update UI accordingly.\r\n        updateUI(user);\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    // Initiate Views\r\n    private void initViews() {\r\n        fragmentManager = getActivity().getSupportFragmentManager();\r\n\r\n        loginButtonF = view.findViewById(R.id.login_button);\r\n        loginButtonF.setFragment(Login_Fragment.this);\r\n        emailid = view.findViewById(R.id.login_emailid);\r\n        password = view.findViewById(R.id.login_password);\r\n        loginButton = view.findViewById(R.id.loginBtn);\r\n        forgotPassword = view.findViewById(R.id.forgot_password);\r\n        signUp = view.findViewById(R.id.createAccount);\r\n        show_hide_password = view\r\n                .findViewById(R.id.show_hide_password);\r\n        loginLayout = view.findViewById(R.id.login_layout);\r\n        googleBtn = view.findViewById(R.id.google);\r\n        faceBookBtn = view.findViewById(R.id.facebook);\r\n        // Load ShakeAnimation\r\n        shakeAnimation = AnimationUtils.loadAnimation(getActivity(),\r\n                R.anim.shake);\r\n\r\n\r\n        // Setting text selector over textviews\r\n        @SuppressLint(\"ResourceType\") XmlResourceParser xrp = getResources().getXml(R.drawable.text_selector);\r\n        try {\r\n            ColorStateList csl = ColorStateList.createFromXml(getResources(),\r\n                    xrp);\r\n\r\n            forgotPassword.setTextColor(csl);\r\n            show_hide_password.setTextColor(csl);\r\n            signUp.setTextColor(csl);\r\n        } catch (Exception e) {\r\n        }\r\n    }\r\n\r\n    // Set Listeners\r\n    private void setListeners() {\r\n        loginButton.setOnClickListener(this);\r\n        forgotPassword.setOnClickListener(this);\r\n        signUp.setOnClickListener(this);\r\n        googleBtn.setOnClickListener(this);\r\n        faceBookBtn.setOnClickListener(this);\r\n        loginButtonF.setOnClickListener(this);\r\n\r\n\r\n        // Set check listener over checkbox for showing and hiding password\r\n        show_hide_password\r\n                .setOnCheckedChangeListener(new OnCheckedChangeListener() {\r\n\r\n                    @Override\r\n                    public void onCheckedChanged(CompoundButton button,\r\n                                                 boolean isChecked) {\r\n\r\n                        // If it is checkec then show password else hide\r\n                        // password\r\n                        if (isChecked) {\r\n\r\n                            show_hide_password.setText(R.string.hide_pwd);// change checkbox text\r\n                            password.setInputType(InputType.TYPE_CLASS_TEXT);\r\n                            password.setTransformationMethod(HideReturnsTransformationMethod.getInstance());// show password\r\n                        } else {\r\n                            show_hide_password.setText(R.string.show_pwd);// change checkbox text\r\n                            password.setInputType(InputType.TYPE_CLASS_TEXT | InputType.TYPE_TEXT_VARIATION_PASSWORD);\r\n                            password.setTransformationMethod(PasswordTransformationMethod.getInstance());// hide password\r\n\r\n                        }\r\n\r\n                    }\r\n                });\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.loginBtn:\r\n                checkValidation();\r\n                break;\r\n\r\n            case R.id.forgot_password:\r\n\r\n                // Replace forgot password fragment with animation\r\n                fragmentManager\r\n                        .beginTransaction()\r\n                        .setCustomAnimations(R.anim.right_enter, R.anim.left_out)\r\n                        .replace(R.id.frameContainer,\r\n                                new ForgotPassword_Fragment(),\r\n                                Utils.ForgotPassword_Fragment).commit();\r\n                break;\r\n            case R.id.createAccount:\r\n\r\n                // Replace signup frgament with animation\r\n                fragmentManager\r\n                        .beginTransaction()\r\n                        .setCustomAnimations(R.anim.right_enter, R.anim.left_out)\r\n                        .replace(R.id.frameContainer, new SignUp_Fragment(),\r\n                                Utils.SignUp_Fragment).commit();\r\n\r\n                break;\r\n            case R.id.google:\r\n                signIn();\r\n\r\n                break;\r\n\r\n            case R.id.facebook:\r\n                loginButtonF.performClick();\r\n                signInFacebook();\r\n                break;\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // Check Validation before login\r\n    private void checkValidation() {\r\n        // Get email id and password\r\n        String getEmailId = emailid.getText().toString();\r\n        String getPassword = password.getText().toString();\r\n\r\n        // Check patter for email id\r\n        Pattern p = Pattern.compile(Utils.regEx);\r\n\r\n        Matcher m = p.matcher(getEmailId);\r\n\r\n        // Check for both field is empty or not\r\n        if (getEmailId.equals(\"\") || getEmailId.length() == 0\r\n                || getPassword.equals(\"\") || getPassword.length() == 0) {\r\n            loginLayout.startAnimation(shakeAnimation);\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Enter both credentials.\");\r\n\r\n        }\r\n        // Check if email id is valid or not\r\n        else if (!m.find())\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Your Email Id is Invalid.\");\r\n            // Else do login and do your stuff\r\n        else\r\n            signIn(getEmailId, getPassword);\r\n\r\n\r\n    }\r\n\r\n    public void signIn(String email, String password) {\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n\r\n                            user = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n                            if (user != null) {\r\n                                // Name, email address, and profile photo Url\r\n                                String name = user.getDisplayName();\r\n                                if (name == null) {\r\n                                    Log.d(\"urlllname\", \"Welcome\");\r\n                                    Toast.makeText(getActivity(), \"Welcome++++\", Toast.LENGTH_SHORT)\r\n                                            .show();\r\n                                    updateUI(user);\r\n                                } else {\r\n                                    Log.d(\"urllName\", name);\r\n                                    Toast.makeText(getActivity(), \"Welcome\" + name, Toast.LENGTH_SHORT)\r\n                                            .show();\r\n\r\n                                    IdToken=\"\";\r\n                                    IdTokenFlag = false;\r\n                                    editor.putString(\"IdToken\", IdToken);\r\n                                    editor.putString(\"UserType\",\"N\");\r\n                                    editor.putBoolean(\"IdTokenFlag\",IdTokenFlag);\r\n                                    editor.apply();\r\n\r\n                                    IdToken = pref.getString(\"IdToken\", \"\");\r\n                                    Log.d(\"IdTokenNorm\",IdToken);\r\n\r\n                                    UserType = pref.getString(\"UserType\", \"\");\r\n                                    Log.d(\"IdTokenUserTypeNorm\",UserType);\r\n\r\n                                    IdTokenFlag = pref.getBoolean(\"IdTokenFlag\",false);\r\n                                    Log.d(\"IdTokenFlagNorm\",String.valueOf(IdTokenFlag));\r\n                                    updateUI(user);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Toast.makeText(getActivity(), \"Authentication failed: \" + task.getException(),\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void updateUI(FirebaseUser user) {\r\n\r\n        /*-------- Check if G user is already logged in or not--------*/\r\n        if (user != null && IdTokenFlag && UserType.equals(\"G\")) {\r\n            String name = user.getDisplayName();\r\n            Toast.makeText(getActivity(), \"Google Login Success.\" + name, Toast.LENGTH_SHORT).show();\r\n            startActivity(new Intent(getActivity(), MainActivity.class));\r\n        }else if (user != null && IdTokenFlag && UserType.equals(\"F\")){\r\n            String name = user.getDisplayName();\r\n            Toast.makeText(getActivity(), \"Facebook Login Success \" + name, Toast.LENGTH_SHORT).show();\r\n            startActivity(new Intent(getActivity(), MainActivity.class));\r\n        }\r\n        else if (user != null) {\r\n            /*------------ If user's email is verified then access login -----------*/\r\n            if (user.isEmailVerified()) {\r\n                String name = user.getDisplayName();\r\n                Log.d(\"555555\",\"Login Success \" +\"/\" + user.isEmailVerified() +\"/\" +name);\r\n\r\n                startActivity(new Intent(getActivity(), MainActivity.class));\r\n                //Toast.makeText(getActivity(), \"Login Success.\"  +name, Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                Toast.makeText(getActivity(), \"Your Email is not verified.\",\r\n                        Toast.LENGTH_SHORT).show();\r\n                Log.d(\"555556\",\"Login Success.\" +\"/\" + user.isEmailVerified() +\"/\" );\r\n\r\n                startActivity(new Intent(getActivity(), MainActivity.class));\r\n            }\r\n        } else {\r\n            Toast.makeText(getActivity(), \"Welcome , none :)\",\r\n                    Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n    }\r\n\r\n\r\n    // [START onactivityresult]\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        // Result returned from launching the Intent from GoogleSignInApi.getSignInIntent(...);\r\n        if (requestCode == 9001) {\r\n            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n            try {\r\n\r\n                // Google Sign In was successful, authenticate with Firebase\r\n                GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                Log.d(TAG, \"firebaseAuthWithGoogle:\" + account.getId());\r\n                firebaseAuthWithGoogle(account.getIdToken());\r\n                GoogleSignInAccount acct = GoogleSignIn.getLastSignedInAccount(getActivity());\r\n                if (account != null) {\r\n                    String personName = account.getDisplayName();\r\n                    nameReal = personName;\r\n                    String personEmail = account.getEmail();\r\n                    emailReal = personEmail;\r\n                    String personId = account.getId();\r\n                    Uri personPhoto = account.getPhotoUrl();\r\n                    uriReal = personPhoto;\r\n\r\n                    //final String gId = firebaseUser.getUid();//firebaseUser.getUid();\r\n\r\n\r\n                    FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n                    while (mAuth.getCurrentUser() == null) {\r\n                        mAuth = FirebaseAuth.getInstance();\r\n\r\n                        Log.v(\"555555\", \"id: \" + \"nulllllllll\");\r\n\r\n                        if (mAuth.getCurrentUser() != null) {\r\n                            //Your action here\r\n\r\n                            FirebaseUser firebaseUser = mAuth.getCurrentUser();\r\n                            String fId = firebaseUser.getUid();\r\n                            idReal = fId;\r\n                            Log.v(\"5555555\", \"id: \" + idReal);\r\n                            saveGoogleAndFacebookAuthToRealFirebase(idReal, nameReal, emailReal, uriReal);\r\n                            Log.v(\"555555\", \": \" + fId);\r\n                            break;\r\n\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n            } catch (ApiException e) {\r\n                // Google Sign In failed, update UI appropriately\r\n                Log.w(TAG, \"Google sign in failed\", e);\r\n            }\r\n        } else {\r\n\r\n            // Pass the activity result back to the Facebook SDK\r\n            mCallbackManager.onActivityResult(requestCode, resultCode, data);\r\n\r\n        }\r\n\r\n    }\r\n    // [END onactivityresult]\r\n\r\n    // [START auth_with_google]\r\n    private void firebaseAuthWithGoogle(String idToken) {\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"signInWithCredential:success\");\r\n                            FirebaseUser user = mAuth.getCurrentUser();\r\n                            IdTokenFlag =true;\r\n\r\n\r\n                            editor.putString(\"IdToken\", idToken);\r\n                            editor.putString(\"UserType\",\"G\");\r\n                            editor.putBoolean(\"IdTokenFlag\",IdTokenFlag);\r\n                            editor.apply();\r\n\r\n                            IdToken = pref.getString(\"IdToken\", \"\");\r\n                            Log.d(\"IdTokenGoogle\",IdToken);\r\n\r\n                            UserType = pref.getString(\"UserType\", \"\");\r\n                            Log.d(\"IdTokenUserTypeGoogle\",UserType);\r\n\r\n                            IdTokenFlag = pref.getBoolean(\"IdTokenFlag\",false);\r\n                            Log.d(\"IdTokenFlagGoogle\",String.valueOf(IdTokenFlag));\r\n\r\n                            updateUI(user);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.d(TAG, \"signInWithCredential:failure\", task.getException());\r\n                            updateUI(null);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n    // [END auth_with_google]\r\n\r\n    // [START signin]\r\n    private void signIn() {\r\n        Intent signInIntent = mGoogleSignInClient.getSignInIntent();\r\n        startActivityForResult(signInIntent, 9001);\r\n    }\r\n    // [END signin]\r\n\r\n    public void saveGoogleAndFacebookAuthToRealFirebase(String uid, String name, String email, Uri uri) {\r\n\r\n        userData.setEmail(email);\r\n        userData.setUri(uri);\r\n        //userData.setLocation(location);\r\n        //userData.setPhone(phone);\r\n        ///userData.setPassword(password);\r\n        userData.setName(name);\r\n        userData.setid(uid);\r\n\r\n        FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        DatabaseReference myRef = database.getReference(\"Users\").child(uid);\r\n\r\n        myRef.child(\"id\").setValue(userData.getid());\r\n        myRef.child(\"email\").setValue(userData.getEmail());\r\n        myRef.child(\"uri\").setValue(userData.getUri().toString());\r\n        //myRef.child(\"location\").setValue(userData.getLocation());\r\n        //myRef.child(\"phone\").setValue(userData.getPhone());\r\n        //myRef.child(\"pass\").setValue(userData.getPassword());\r\n        myRef.child(\"name\").setValue(userData.getName());\r\n\r\n\r\n    }\r\n\r\n    private void signInFacebook() {\r\n        // [START initialize_fblogin]\r\n        // Initialize Facebook Login button\r\n\r\n        loginButtonF.setPermissions(\"email\", \"public_profile\");\r\n        loginButtonF.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {\r\n            @Override\r\n            public void onSuccess(LoginResult loginResult) {\r\n                Log.d(FTAG, \"facebook:onSuccess:\" + loginResult);\r\n\r\n                handleFacebookAccessToken(loginResult.getAccessToken());\r\n                //Use GraphApi to get the information into the app.\r\n                GraphRequest request = GraphRequest.newMeRequest(\r\n                        //pass two parameter\r\n                        loginResult.getAccessToken(),                       //one is the current token\r\n                        new GraphRequest.GraphJSONObjectCallback()          //2nd is grahJSONObject callback\r\n                        {\r\n                            @Override\r\n                            public void onCompleted(JSONObject object, GraphResponse response) {\r\n                                Log.v(\"facebookdata\", response.toString());\r\n\r\n                                // Application code\r\n                                try {\r\n                                    String obj = object.toString();                     //get complete JSON object refrence.\r\n                                    String name = object.getString(\"name\");                 //get particular JSON Object\r\n                                    nameReal = name;\r\n                                    String email = object.getString(\"email\");\r\n                                    emailReal = email;\r\n                                    //String birthday = object.getString(\"birthday\"); // 01/31/1980 format\r\n                                    String id = object.getString(\"id\");\r\n                                    //String gender = object.getString(\"gender\");\r\n                                    String profileURL = \"\";\r\n\r\n                                    if (Profile.getCurrentProfile() != null) {\r\n\r\n                                        //add this check because some people don't have profile picture\r\n                                        profileURL = ImageRequest.getProfilePictureUri(Profile.getCurrentProfile().getId(), 400, 400) + \"&access_token=2615626898730021|JUNggramyAICJhX_cwcl0M4Vs48\";\r\n                                        //after getting the profile url you can easily set this to image view using Glide or retrofit library . simple :)\r\n                                        Log.v(\"facebookdata1\", profileURL);\r\n                                    }\r\n\r\n\r\n                                    Log.v(\"facebookdata2\", obj);\r\n                                    Log.v(\"facebookdata\", \"id: \" + id);\r\n                                    Log.v(\"facebookdata\", \"name: \" + name);\r\n                                    Log.v(\"facebookdata\", \"email: \" + email);\r\n                                    // Log.v(\"facebookdata\",\"birthday: \"+birthday);\r\n                                    //Log.v(\"facebookdata\",\"gender: \"+gender);\r\n                                    Log.v(\"facebookdata\", \"profileURL: \" + profileURL);\r\n                                    Uri uri = Uri.parse(profileURL);\r\n                                    uriReal = uri;\r\n                                    //FirebaseAuth m2Auth = FirebaseAuth.getInstance();\r\n                                    //FirebaseUser user = mAuth.getCurrentUser();\r\n                                    //String UID =user.getUid();\r\n                                   /*\r\n                                    FirebaseUser firebaseUser =mAuth.getCurrentUser();\r\n                                    String fId =firebaseUser.getUid();*/\r\n\r\n\r\n                                    mAuth = FirebaseAuth.getInstance();\r\n\r\n                                    while (mAuth.getCurrentUser() == null) {\r\n\r\n                                        Log.v(\"555555\", \"id: \" + \"nulllllllll\");\r\n\r\n                                        if (mAuth.getCurrentUser() != null) {\r\n                                            //Your action here\r\n                                            FirebaseUser firebaseUser = mAuth.getCurrentUser();\r\n                                            String fId = firebaseUser.getUid();\r\n                                            idReal = fId;\r\n                                            Log.v(\"5555555\", \"id: \" + idReal);\r\n                                            saveGoogleAndFacebookAuthToRealFirebase(idReal, nameReal, emailReal, uriReal);\r\n                                            Log.v(\"555555\", \": \" + fId);\r\n                                            break;\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    mAuthListener = new FirebaseAuth.AuthStateListener() {\r\n                                        @Override\r\n                                        public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {\r\n\r\n                                        }\r\n                                    };\r\n\r\n\r\n                                } catch (Exception e) {\r\n                                    e.printStackTrace();\r\n                                }\r\n                            }\r\n                        });\r\n                Bundle parameters = new Bundle();\r\n                parameters.putString(\"fields\", \"id,name,email,gender,birthday\");                    //set these parameter\r\n                request.setParameters(parameters);\r\n                request.executeAsync();                                 //exuecute task in seprate thread\r\n\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancel() {\r\n                Log.d(FTAG, \"facebook:onCancel\");\r\n            }\r\n\r\n            @Override\r\n            public void onError(FacebookException error) {\r\n                Log.d(FTAG, \"facebook:onError\", error);\r\n            }\r\n        });\r\n        // [END initialize_fblogin]\r\n    }\r\n\r\n\r\n    private void handleFacebookAccessToken(AccessToken token) {\r\n        Log.d(FTAG, \"handleFacebookAccessToken:\" + token);\r\n\r\n        AuthCredential credential = FacebookAuthProvider.getCredential(token.getToken());\r\n        mAuth.signInWithCredential(credential)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(FTAG, \"signInWithCredential:success\");\r\n                            FirebaseUser user = mAuth.getCurrentUser();\r\n                            IdTokenFlag = true;\r\n                            IdToken = token.getToken();\r\n\r\n                            editor.putString(\"IdToken\", IdToken);\r\n                            editor.putString(\"UserType\",\"F\");\r\n                            editor.putBoolean(\"IdTokenFlag\",IdTokenFlag);\r\n                            editor.apply();\r\n\r\n                            IdToken = pref.getString(\"IdToken\", \"\");\r\n                            Log.d(\"IdTokenFace\",IdToken);\r\n\r\n                            UserType = pref.getString(\"UserType\", \"\");\r\n                            Log.d(\"IdTokenUserTypeFace\",UserType);\r\n\r\n                            IdTokenFlag = pref.getBoolean(\"IdTokenFlag\",false);\r\n                            Log.d(\"IdTokenFlagFace\",String.valueOf(IdTokenFlag));\r\n\r\n                            updateUI(user);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(FTAG, \"signInWithCredential:failure\", task.getException());\r\n                            Toast.makeText(getActivity(), \"Authentication failed.\", Toast.LENGTH_SHORT).show();\r\n                            updateUI(null);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Sign/Login_Fragment.java	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/java/com/example/graduationproject/Sign/Login_Fragment.java	(date 1622941157795)
@@ -6,6 +6,7 @@
 import android.content.SharedPreferences;
 import android.content.res.ColorStateList;
 import android.content.res.XmlResourceParser;
+import android.graphics.Color;
 import android.net.Uri;
 import android.os.Bundle;
 import android.text.InputType;
@@ -179,9 +180,9 @@
             ColorStateList csl = ColorStateList.createFromXml(getResources(),
                     xrp);
 
-            forgotPassword.setTextColor(csl);
-            show_hide_password.setTextColor(csl);
-            signUp.setTextColor(csl);
+            forgotPassword.setTextColor(Color.rgb(	69	,166,	222));
+            show_hide_password.setTextColor(Color.rgb(	69	,166,	222));
+            signUp.setTextColor(Color.rgb(	69	,166,	222));
         } catch (Exception e) {
         }
     }
@@ -201,8 +202,7 @@
                 .setOnCheckedChangeListener(new OnCheckedChangeListener() {
 
                     @Override
-                    public void onCheckedChanged(CompoundButton button,
-                                                 boolean isChecked) {
+                    public void onCheckedChanged(CompoundButton button, boolean isChecked) {
 
                         // If it is checkec then show password else hide
                         // password
Index: app/src/main/java/com/example/graduationproject/Sign/SignUp_Fragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Sign;\r\n\r\nimport android.Manifest;\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentUris;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.content.res.ColorStateList;\r\nimport android.content.res.XmlResourceParser;\r\nimport android.database.Cursor;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Matrix;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.provider.DocumentsContract;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.View.OnClickListener;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.exifinterface.media.ExifInterface;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.example.graduationproject.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.UserProfileChangeRequest;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.annotations.Nullable;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\n\r\npublic class SignUp_Fragment extends Fragment implements OnClickListener {\r\n    private static final String TAG = SignUp_Fragment.class.getName();\r\n    public static String uid;\r\n    private static View view;\r\n    private static EditText fullName, emailId, mobileNumber, //location,\r\n            password, confirmPassword;\r\n    private static Spinner location;\r\n    //  private static Spinner dropdown;\r\n    private static TextView login;\r\n    private static Button signUpButton;\r\n    private static CheckBox terms_conditions;\r\n    public FirebaseAuth mAuth;\r\n    public Uri generatedFilePathURI;\r\n    public FirebaseUser firebaseUser;\r\n    public FirebaseDatabase database;\r\n    public DatabaseReference myRef;\r\n    ImageView user_profile;\r\n    DatabaseReference databaseReference;\r\n    Uri image_uri;\r\n    // instance for firebase storage and StorageReference\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    User user = new User();\r\n    //\r\n\r\n    public SignUp_Fragment() {\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.signup_layout, container, false);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        initViews();\r\n        setListeners();\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        // Check if user is signed in (non-null) and update UI accordingly.\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n\r\n        //new SignMainActivity().replaceLoginFragment();\r\n    }\r\n\r\n\r\n    // Initialize all views\r\n    private void initViews() {\r\n        fullName = view.findViewById(R.id.fullName);\r\n        emailId = view.findViewById(R.id.userEmailId);\r\n        mobileNumber = view.findViewById(R.id.mobileNumber);\r\n        location = view.findViewById(R.id.spinner);\r\n        password = view.findViewById(R.id.password);\r\n        confirmPassword = view.findViewById(R.id.confirmPassword);\r\n        signUpButton = view.findViewById(R.id.signUpBtn);\r\n        login = view.findViewById(R.id.already_user);\r\n//\t\tterms_conditions = (CheckBox) view.findViewById(R.id.terms_conditions);\r\n        user_profile = view.findViewById(R.id.add_pic);\r\n        //   dropdown = view.findViewById(R.id.spinner);\r\n\r\n        //create a list of items for the spinner.\r\n        String[] items = new String[]{\"Choose Your Location\", \"Alexandria\", \"Aswan\", \"Asyut\", \"Beheira\", \"Beni Suef\", \"Cairo\", \"Dakahlia\", \"Damietta\", \"Faiyum\", \"Gharbia\", \"Giza\", \"Ismailia\", \"Kafr El Sheikh\", \"Luxor\", \"Matruh\", \"Minya\", \"Monufia\", \"New Valley\", \"North Sinai\", \"Port Said\", \"Qalyubia\", \"Qena\", \"Red Sea\", \"Sharqia\", \"Sohag\", \"South Sinai\", \"Suez\"};\r\n\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_dropdown_item, items);\r\n        location.setAdapter(adapter);\r\n\r\n        // Setting text selector over textviews\r\n        @SuppressLint(\"ResourceType\") XmlResourceParser xrp = getResources().getXml(R.drawable.text_selector);\r\n        try {\r\n            ColorStateList csl = ColorStateList.createFromXml(getResources(),\r\n                    xrp);\r\n\r\n            login.setTextColor(csl);\r\n//\t\t\tterms_conditions.setTextColor(csl);\r\n        } catch (Exception e) {\r\n            Toast.makeText(getActivity(), e + \" \", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    /////////////for saving all data in realetime data base/////////////////////// , String photo, String name, String email, String phone, String location, String password\r\n\r\n    /*public void getImageFromStorageDB(){\r\n\r\n\r\n        File localFile = File.createTempFile(\"images\", \"jpg\");\r\n        riversRef.getFile(localFile)\r\n                .addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {\r\n                    @Override\r\n                    public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {\r\n                        // Successfully downloaded data to local file\r\n                        // ...\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception exception) {\r\n                // Handle failed download\r\n                // ...\r\n            }\r\n        });\r\n    }\r\n\r\n     */\r\n\r\n    public void saveToRealFirebase(String uid, String name, String email, String phone, String location, String password) {\r\n        //saveToRealFirebase(String uid, Uri uri, String name, String email, String phone, String location, String password)\r\n        //User user = new User();\r\n        user.setEmail(email);\r\n        //user.setUri(uri);\r\n        user.setLocation(location);\r\n        user.setPhone(phone);\r\n        user.setPassword(password);\r\n        user.setName(name);\r\n        user.setid(uid);\r\n\r\n\r\n        //FirebaseDatabase database = FirebaseDatabase.getInstance();\r\n        database = FirebaseDatabase.getInstance();\r\n        //DatabaseReference myRef = database.getReference(\"Users\").child(uid);\r\n        myRef = database.getReference(\"Users\").child(uid);\r\n        databaseReference = myRef;\r\n\r\n        myRef.child(\"id\").setValue(user.getid());\r\n        myRef.child(\"email\").setValue(user.getEmail());\r\n        //myRef.child(\"uri\").setValue(user.getUri().toString());\r\n        myRef.child(\"location\").setValue(user.getLocation());\r\n        myRef.child(\"phone\").setValue(user.getPhone());\r\n        myRef.child(\"pass\").setValue(user.getPassword());\r\n        myRef.child(\"name\").setValue(user.getName());\r\n\r\n\r\n    }\r\n\r\n\r\n    // Set Listeners\r\n    private void setListeners() {\r\n        signUpButton.setOnClickListener(this);\r\n        login.setOnClickListener(this);\r\n        user_profile.setOnClickListener(new OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                /*\r\n                Intent takePicture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                startActivityForResult(takePicture, 0);//zero can be replaced with any action code (called requestCode)\r\n\r\n                Intent pickPhoto = new Intent(Intent.ACTION_PICK,\r\n                        android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(pickPhoto , 1);//one can be replaced with any action code\r\n                */\r\n\r\n                SelectProfilePic();\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.signUpBtn:\r\n\r\n                // Call checkValidation method\r\n                checkValidation();\r\n                break;\r\n\r\n            case R.id.already_user:\r\n\r\n                // Replace login fragment\r\n                new SignMainActivity().replaceLoginFragment();\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    // Check Validation Method\r\n    private void checkValidation() {\r\n\r\n        // Get all edittext texts\r\n        String getFullName = fullName.getText().toString();\r\n        String getEmailId = emailId.getText().toString();\r\n        String getMobileNumber = mobileNumber.getText().toString();\r\n        String getLocation = location.getSelectedItem().toString();\r\n        String getPassword = password.getText().toString();\r\n        String getConfirmPassword = confirmPassword.getText().toString();\r\n\r\n\r\n        // Pattern match for email id\r\n        Pattern p = Pattern.compile(Utils.regEx);\r\n        Matcher m = p.matcher(getEmailId);\r\n\r\n        // Check if all strings are null or not\r\n        if (getFullName.equals(\"\") || getFullName.length() == 0\r\n                || getEmailId.equals(\"\") || getEmailId.length() == 0\r\n                || getMobileNumber.equals(\"\") || getMobileNumber.length() == 0\r\n                || getLocation.equals(\"Choose Your Location\") || location.getSelectedItemPosition() == 0\r\n                || getPassword.equals(\"\") || getPassword.length() == 0\r\n                || getConfirmPassword.equals(\"\")\r\n                || getConfirmPassword.length() == 0) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"All fields are required.\");\r\n        }\r\n\r\n        // Check if email id valid or not\r\n        else if (!m.find()) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Your Email Id is Invalid.\");\r\n        }\r\n        // Check if both password should be equal\r\n        else if (!getConfirmPassword.equals(getPassword)) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Both password doesn't match.\");\r\n        }\r\n        // Check if pass > 6\r\n        else if (getPassword.length() < 6) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Password should be at least 6 characters\");\r\n        } else if (image_uri == null) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"choose a profile image\");\r\n        }\r\n        else if (mobileNumber.length() != 11) {\r\n            new CustomToast().Show_Toast(getActivity(), view,\r\n                    \"Mobile should be 11 Numbers\");\r\n        }\r\n\r\n\r\n        /*\r\n\t\t// Make sure user should check Terms and Conditions checkbox\r\n\t\telse if (!terms_conditions.isChecked())\r\n\t\t\tnew CustomToast().Show_Toast(getActivity(), view,\r\n\t\t\t\t\t\"Please select Terms and Conditions.\");*/\r\n\r\n        // Else do signup or do your stuff\r\n        else {\r\n            //createAccount(getEmailId, getPassword);\r\n            createAccount(getEmailId, getPassword, getMobileNumber, getLocation, getFullName);\r\n            //userProfile(getFullName);\r\n\t\t\t/*Toast.makeText(getActivity(), \"welcome (\" + getFullName + \")\", Toast.LENGTH_SHORT)\r\n\t\t\t\t\t.show();\r\n\r\n\t\t\t */\r\n            // Replace login fragment\r\n            //new SignMainActivity().replaceLoginFragment();\r\n        }\r\n    }\r\n\r\n    // UploadImage method\r\n    public void uploadImage() {\r\n        if (image_uri != null) {\r\n\r\n            // Code for showing progressDialog while uploading\r\n            final ProgressDialog progressDialog\r\n                    = new ProgressDialog(getActivity());\r\n            progressDialog.setTitle(\"Uploading...\");\r\n\r\n            progressDialog.show();\r\n            progressDialog.setCanceledOnTouchOutside(false);\r\n            progressDialog.setCancelable(false);\r\n\r\n            // Defining the child of storageReference\r\n            storageReference = FirebaseStorage.getInstance().getReference();\r\n            final StorageReference ref = storageReference.child(\"images/\").child(uid + \"/UserImage\");\r\n\r\n            // adding listeners on upload\r\n            // or failure of image\r\n            generatedFilePathURI = image_uri;\r\n            byte[] data = new byte[0];\r\n            try {\r\n                Bitmap bmp = MediaStore.Images.Media.getBitmap(getActivity().getContentResolver(), image_uri);\r\n                bmp = modifyOrientation(bmp,getPath(getContext(),image_uri));\r\n                ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n                bmp.compress(Bitmap.CompressFormat.JPEG, 30, baos);\r\n                data = baos.toByteArray();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            Log.d(\"urlll1\", generatedFilePathURI + \"\");\r\n            UploadTask uploadTask = ref.putBytes(data);//ref.putFile(image_uri);\r\n            ref.putBytes(data).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                    // Image uploaded successfully\r\n                    // Dismiss dialog\r\n                    ref.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            //Now play with downloadPhotoUrl\r\n                            //Store data into Firebase Realtime Database\r\n                            generatedFilePathURI = uri;\r\n                            Log.d(\"urlll\", generatedFilePathURI + \"\");\r\n\r\n                               // imageToRealFirebase(generatedFilePathURI);\r\n                            user.setUri(uri);\r\n\r\n                            database = FirebaseDatabase.getInstance();\r\n                            myRef = database.getReference(\"Users\").child(uid);\r\n                            myRef.child(\"uri\").setValue(user.getUri().toString()).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void unused) {\r\n                                    progressDialog.dismiss();\r\n                                    Toast.makeText(getActivity(), \"Image Uploaded!!\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n\r\n                            // Error, Image not uploaded\r\n                            progressDialog.dismiss();\r\n                            Toast\r\n                                    .makeText(getActivity(),\r\n                                            \"Failed \" + e.getMessage(),\r\n                                            Toast.LENGTH_SHORT)\r\n                                    .show();\r\n                        }\r\n                    })\r\n                    .addOnProgressListener(\r\n                            new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n\r\n                                // Progress Listener for loading\r\n                                // percentage on the dialog box\r\n                                @Override\r\n                                public void onProgress(\r\n                                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                                    double progress = (100.0 * taskSnapshot.getBytesTransferred() / taskSnapshot.getTotalByteCount());\r\n                                    progressDialog.setMessage(\"Uploaded \" + (int) progress + \"%\");\r\n                                }\r\n                            });\r\n        }\r\n    }\r\n\r\n\r\n    public void createAccount(final String email, final String password, final String phone, final String location, final String name) {\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(TAG, \"createUserWithEmail:success\");\r\n                            firebaseUser = mAuth.getCurrentUser();\r\n                            uid = firebaseUser.getUid();\r\n                            // Toast.makeText(getActivity(), \"3 \", Toast.LENGTH_SHORT).show();\r\n                            uploadImage();\r\n\r\n                            //Toast.makeText(getActivity(), generatedFilePathURI.toString() , Toast.LENGTH_SHORT).show();\r\n                            // Toast.makeText(getActivity(), \"2 \", Toast.LENGTH_SHORT).show();\r\n                            Log.d(\"urlll2\", generatedFilePathURI.toString());\r\n                            saveToRealFirebase(uid, name, email, phone, location, password);\r\n                            //saveToRealFirebase(uid, generatedFilePathURI, name, email, phone, location, password);\r\n                            //Toast.makeText(getActivity(), \"1 \", Toast.LENGTH_SHORT).show();\r\n                            Toast.makeText(getActivity(), \"Sign up success \" + uid, Toast.LENGTH_SHORT).show();\r\n                            userProfile(name);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(TAG, \"createUserWithEmail:failure\", task.getException());\r\n                            Toast.makeText(getActivity(), \"Sign up failed: \" + task.getException().toString(), Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n\r\n                        // ...\r\n                        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n\r\n                    }\r\n                });\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    /*----------For saving image and user name in Auth Firebase Database-------*/\r\n\r\n    public void userProfile(String name) {\r\n        firebaseUser = mAuth.getCurrentUser();\r\n        if (firebaseUser != null) {\r\n            UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()\r\n                    .setDisplayName(name).setPhotoUri(generatedFilePathURI).build();\r\n            firebaseUser.updateProfile(profileUpdates).addOnCompleteListener(getActivity(), new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                    verifyEmailRequest();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    /*-------For sending verification email on user's registered email------*/\r\n    private void verifyEmailRequest() {\r\n        firebaseUser.sendEmailVerification()\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<Void>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Void> task) {\r\n                        if (task.isSuccessful()) {\r\n                            Toast.makeText(getActivity(), \"Email verification sent on\\n\" + emailId.getText().toString(), Toast.LENGTH_LONG).show();\r\n                            mAuth.signOut();\r\n                            startActivity(new Intent(getActivity(),SignMainActivity.class));\r\n                        } else {\r\n                            Toast.makeText(getActivity(), \"Sign up Success But Failed to send verification email.\", Toast.LENGTH_LONG).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    /*-------- Below Code is for selecting image from galary or camera -----------*/\r\n    private void SelectProfilePic() {\r\n        final CharSequence[] options = {\"Take Photo\", \"Choose from Gallery\", \"Cancel\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n        builder.setTitle(\"Add Photo!\");\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                        if (getActivity().checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED ||\r\n                                getActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_DENIED) {\r\n                            String[] permission = {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                            requestPermissions(permission, 1000);\r\n                        } else {\r\n                            openCamera();\r\n                        }\r\n                    } else {\r\n                        openCamera();\r\n                    }\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n\r\n                    Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);\r\n\r\n                    startActivityForResult(intent, 2);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n\r\n                    dialog.dismiss();\r\n\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n\r\n    }\r\n\r\n    private void openCamera() {\r\n        ContentValues values = new ContentValues();\r\n        values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n        values.put(MediaStore.Images.Media.DESCRIPTION, \"From Camera\");\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n\r\n        //Camera intent\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n        startActivityForResult(takePictureIntent, 1);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch (requestCode) {\r\n            case 1000:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    openCamera();\r\n                } else {\r\n                    //permisiion from pop up was denied.\r\n                    Toast.makeText(getActivity(), \"Permission Denied...\", Toast.LENGTH_LONG).show();\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        // Result code is RESULT_OK only if the user selects an Image\r\n        if (resultCode == Activity.RESULT_OK) {\r\n            switch (requestCode) {\r\n                case 1:\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .fitCenter()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(user_profile);\r\n                    //Toast.makeText(getActivity(),\"case 1 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case 2:\r\n                    //data.getData returns the content URI for the selected Image\r\n                    image_uri = data.getData();\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .fitCenter()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(user_profile);\r\n                    //Toast.makeText(getActivity(),\"case 2 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    ///////////////////save image url in realtime database /////////////\r\n    public void imageToRealFirebase(Uri uri) {\r\n        user.setUri(uri);\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        myRef = database.getReference(\"Users\").child(uid);\r\n        myRef.child(\"uri\").setValue(user.getUri().toString());\r\n    }\r\n\r\n    ////////////////////////////////////////////////////////////////////////////\r\n    ////////////// image uri to bitmap ///////////////\r\n\r\n    public static String getPath(final Context context, final Uri uri) {\r\n\r\n        final boolean isKitKat = Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT;\r\n\r\n        // DocumentProvider\r\n        if (isKitKat && DocumentsContract.isDocumentUri(context, uri)) {\r\n            // ExternalStorageProvider\r\n            if (isExternalStorageDocument(uri)) {\r\n                final String docId = DocumentsContract.getDocumentId(uri);\r\n                final String[] split = docId.split(\":\");\r\n                final String type = split[0];\r\n\r\n                if (\"primary\".equalsIgnoreCase(type)) {\r\n                    return Environment.getExternalStorageDirectory() + \"/\" + split[1];\r\n                }\r\n\r\n            }\r\n            // DownloadsProvider\r\n            else if (isDownloadsDocument(uri)) {\r\n\r\n                final String id = DocumentsContract.getDocumentId(uri);\r\n                final Uri contentUri = ContentUris.withAppendedId(\r\n                        Uri.parse(\"content://downloads/public_downloads\"), Long.valueOf(id));\r\n\r\n                return getDataColumn(context, contentUri, null, null);\r\n            }\r\n            // MediaProvider\r\n            else if (isMediaDocument(uri)) {\r\n                final String docId = DocumentsContract.getDocumentId(uri);\r\n                final String[] split = docId.split(\":\");\r\n                final String type = split[0];\r\n\r\n                Uri contentUri = null;\r\n                if (\"image\".equals(type)) {\r\n                    contentUri = MediaStore.Images.Media.EXTERNAL_CONTENT_URI;\r\n                } else if (\"video\".equals(type)) {\r\n                    contentUri = MediaStore.Video.Media.EXTERNAL_CONTENT_URI;\r\n                } else if (\"audio\".equals(type)) {\r\n                    contentUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;\r\n                }\r\n\r\n                final String selection = \"_id=?\";\r\n                final String[] selectionArgs = new String[] {\r\n                        split[1]\r\n                };\r\n\r\n                return getDataColumn(context, contentUri, selection, selectionArgs);\r\n            }\r\n        }\r\n        // MediaStore (and general)\r\n        else if (\"content\".equalsIgnoreCase(uri.getScheme())) {\r\n            return getDataColumn(context, uri, null, null);\r\n        }\r\n        // File\r\n        else if (\"file\".equalsIgnoreCase(uri.getScheme())) {\r\n            return uri.getPath();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public static String getDataColumn(Context context, Uri uri, String selection,\r\n                                       String[] selectionArgs) {\r\n\r\n        Cursor cursor = null;\r\n        final String column = \"_data\";\r\n        final String[] projection = {\r\n                column\r\n        };\r\n\r\n        try {\r\n            cursor = context.getContentResolver().query(uri, projection, selection, selectionArgs,\r\n                    null);\r\n            if (cursor != null && cursor.moveToFirst()) {\r\n                final int column_index = cursor.getColumnIndexOrThrow(column);\r\n                return cursor.getString(column_index);\r\n            }\r\n        } finally {\r\n            if (cursor != null)\r\n                cursor.close();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static boolean isExternalStorageDocument(Uri uri) {\r\n        return \"com.android.externalstorage.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isDownloadsDocument(Uri uri) {\r\n        return \"com.android.providers.downloads.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    public static boolean isMediaDocument(Uri uri) {\r\n        return \"com.android.providers.media.documents\".equals(uri.getAuthority());\r\n    }\r\n\r\n    ////////////////////////////////oriantation\r\n\r\n    public static Bitmap modifyOrientation(Bitmap bitmap, String image_absolute_path) throws IOException {\r\n        ExifInterface ei = new ExifInterface(image_absolute_path);\r\n        int orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);\r\n\r\n        switch (orientation) {\r\n            case ExifInterface.ORIENTATION_ROTATE_90:\r\n                return rotate(bitmap, 90);\r\n\r\n            case ExifInterface.ORIENTATION_ROTATE_180:\r\n                return rotate(bitmap, 180);\r\n\r\n            case ExifInterface.ORIENTATION_ROTATE_270:\r\n                return rotate(bitmap, 270);\r\n\r\n            case ExifInterface.ORIENTATION_FLIP_HORIZONTAL:\r\n                return flip(bitmap, true, false);\r\n\r\n            case ExifInterface.ORIENTATION_FLIP_VERTICAL:\r\n                return flip(bitmap, false, true);\r\n\r\n            default:\r\n                return bitmap;\r\n        }\r\n    }\r\n\r\n    public static Bitmap rotate(Bitmap bitmap, float degrees) {\r\n        Matrix matrix = new Matrix();\r\n        matrix.postRotate(degrees);\r\n        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);\r\n    }\r\n\r\n    public static Bitmap flip(Bitmap bitmap, boolean horizontal, boolean vertical) {\r\n        Matrix matrix = new Matrix();\r\n        matrix.preScale(horizontal ? -1 : 1, vertical ? -1 : 1);\r\n        return Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Sign/SignUp_Fragment.java	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/java/com/example/graduationproject/Sign/SignUp_Fragment.java	(date 1622943761143)
@@ -15,6 +15,7 @@
 import android.content.res.XmlResourceParser;
 import android.database.Cursor;
 import android.graphics.Bitmap;
+import android.graphics.Color;
 import android.graphics.Matrix;
 import android.net.Uri;
 import android.os.Build;
@@ -27,6 +28,7 @@
 import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
+import android.widget.AdapterView;
 import android.widget.ArrayAdapter;
 import android.widget.Button;
 import android.widget.CheckBox;
@@ -129,20 +131,23 @@
         user_profile = view.findViewById(R.id.add_pic);
         //   dropdown = view.findViewById(R.id.spinner);
 
+
+
         //create a list of items for the spinner.
         String[] items = new String[]{"Choose Your Location", "Alexandria", "Aswan", "Asyut", "Beheira", "Beni Suef", "Cairo", "Dakahlia", "Damietta", "Faiyum", "Gharbia", "Giza", "Ismailia", "Kafr El Sheikh", "Luxor", "Matruh", "Minya", "Monufia", "New Valley", "North Sinai", "Port Said", "Qalyubia", "Qena", "Red Sea", "Sharqia", "Sohag", "South Sinai", "Suez"};
 
 
-        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), android.R.layout.simple_spinner_dropdown_item, items);
+        ArrayAdapter<String> adapter = new ArrayAdapter<String>(getActivity(), R.layout.color_spinner, items);
         location.setAdapter(adapter);
 
+
+
         // Setting text selector over textviews
         @SuppressLint("ResourceType") XmlResourceParser xrp = getResources().getXml(R.drawable.text_selector);
         try {
-            ColorStateList csl = ColorStateList.createFromXml(getResources(),
-                    xrp);
+            ColorStateList csl = ColorStateList.createFromXml(getResources(), xrp);
 
-            login.setTextColor(csl);
+            login.setTextColor(Color.rgb(	69	,166,	222));
 //			terms_conditions.setTextColor(csl);
         } catch (Exception e) {
             Toast.makeText(getActivity(), e + " ", Toast.LENGTH_SHORT).show();
@@ -173,6 +178,8 @@
 
      */
 
+
+
     public void saveToRealFirebase(String uid, String name, String email, String phone, String location, String password) {
         //saveToRealFirebase(String uid, Uri uri, String name, String email, String phone, String location, String password)
         //User user = new User();
@@ -226,6 +233,8 @@
         });
     }
 
+
+
     @Override
     public void onClick(View v) {
         switch (v.getId()) {
Index: app/src/main/res/drawable/location.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:width=\"24dp\"\r\n    android:height=\"24dp\"\r\n    android:viewportWidth=\"24\"\r\n    android:viewportHeight=\"24\"\r\n    android:tint=\"?attr/colorControlNormal\">\r\n  <path\r\n      android:fillColor=\"@android:color/white\"\r\n      android:pathData=\"M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z\"/>\r\n</vector>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/location.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/drawable/location.xml	(date 1622938845759)
@@ -3,8 +3,8 @@
     android:height="24dp"
     android:viewportWidth="24"
     android:viewportHeight="24"
-    android:tint="?attr/colorControlNormal">
+    android:tint="@color/gray">
   <path
-      android:fillColor="@android:color/white"
+      android:fillColor="@color/gray"
       android:pathData="M12,2C8.13,2 5,5.13 5,9c0,5.25 7,13 7,13s7,-7.75 7,-13c0,-3.87 -3.13,-7 -7,-7zM12,11.5c-1.38,0 -2.5,-1.12 -2.5,-2.5s1.12,-2.5 2.5,-2.5 2.5,1.12 2.5,2.5 -1.12,2.5 -2.5,2.5z"/>
 </vector>
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:card_view=\"http://schemas.android.com/apk/res-auto\"\r\n    tools:context=\".Fragments.HomeFragment\"\r\n    android:orientation=\"vertical\"\r\n    android:gravity=\"center\"\r\n    android:background=\"@color/light_Gray\"\r\n    >\r\n\r\n   <androidx.cardview.widget.CardView\r\n       android:layout_marginTop=\"@dimen/_30sdp\"\r\n       android:id=\"@+id/home_chat_boot_card\"\r\n       android:layout_width=\"280dp\"\r\n       android:layout_height=\"180dp\"\r\n       app:cardBackgroundColor=\"@color/white\"\r\n       card_view:cardCornerRadius=\"25dp\"\r\n       card_view:cardElevation=\"20dp\"\r\n       >\r\n\r\n      <ImageView\r\n          android:layout_width=\"250dp\"\r\n          android:layout_height=\"wrap_content\"\r\n          android:background=\"@drawable/chat_bot\"\r\n          android:layout_gravity=\"center\"/>\r\n\r\n\r\n   </androidx.cardview.widget.CardView>\r\n\r\n   <androidx.cardview.widget.CardView\r\n       android:id=\"@+id/home_chat_person_card\"\r\n       android:layout_width=\"280dp\"\r\n       android:layout_height=\"180dp\"\r\n       app:cardBackgroundColor=\"@color/white\"\r\n       card_view:cardCornerRadius=\"25dp\"\r\n       card_view:cardElevation=\"20dp\"\r\n       android:layout_marginTop=\"@dimen/_20sdp\"\r\n       >\r\n         <ImageView\r\n             android:layout_width=\"250dp\"\r\n             android:layout_height=\"wrap_content\"\r\n             android:background=\"@drawable/chat_icon\"\r\n              android:layout_gravity=\"center\"/>\r\n   </androidx.cardview.widget.CardView>\r\n\r\n   <androidx.cardview.widget.CardView\r\n       android:id=\"@+id/home_therapist_card\"\r\n       android:layout_width=\"280dp\"\r\n       android:layout_height=\"180dp\"\r\n       app:cardBackgroundColor=\"@color/white\"\r\n       card_view:cardCornerRadius=\"25dp\"\r\n       card_view:cardElevation=\"20dp\"\r\n       android:layout_marginTop=\"@dimen/_20sdp\"\r\n       android:layout_marginBottom=\"@dimen/_50sdp\"\r\n       >\r\n\r\n         <ImageView\r\n             android:layout_width=\"250dp\"\r\n             android:layout_height=\"wrap_content\"\r\n             android:background=\"@drawable/doctors_icon\"\r\n             android:layout_gravity=\"center\"/>\r\n\r\n\r\n   </androidx.cardview.widget.CardView>\r\n\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_home.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/layout/fragment_home.xml	(date 1622927258446)
@@ -16,7 +16,7 @@
        android:id="@+id/home_chat_boot_card"
        android:layout_width="280dp"
        android:layout_height="180dp"
-       app:cardBackgroundColor="@color/white"
+       app:cardBackgroundColor="@color/whitee"
        card_view:cardCornerRadius="25dp"
        card_view:cardElevation="20dp"
        >
@@ -34,7 +34,7 @@
        android:id="@+id/home_chat_person_card"
        android:layout_width="280dp"
        android:layout_height="180dp"
-       app:cardBackgroundColor="@color/white"
+       app:cardBackgroundColor="@color/whitee"
        card_view:cardCornerRadius="25dp"
        card_view:cardElevation="20dp"
        android:layout_marginTop="@dimen/_20sdp"
@@ -50,7 +50,7 @@
        android:id="@+id/home_therapist_card"
        android:layout_width="280dp"
        android:layout_height="180dp"
-       app:cardBackgroundColor="@color/white"
+       app:cardBackgroundColor="@color/whitee"
        card_view:cardCornerRadius="25dp"
        card_view:cardElevation="20dp"
        android:layout_marginTop="@dimen/_20sdp"
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RunConfigurationProducerService\">\r\n    <option name=\"ignoredProducers\">\r\n      <set>\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer\" />\r\n        <option value=\"org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer\" />\r\n      </set>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/runConfigurations.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ .idea/runConfigurations.xml	(date 1622933681243)
@@ -3,6 +3,7 @@
   <component name="RunConfigurationProducerService">
     <option name="ignoredProducers">
       <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
         <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
Index: app/src/main/res/layout/color_spinner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/color_spinner.xml	(date 1622943882486)
+++ app/src/main/res/layout/color_spinner.xml	(date 1622943882486)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<CheckedTextView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:textSize="16sp"
+    android:padding="10dp"
+    android:textColor="@color/gray"
+    android:layout_height="wrap_content">
+
+</CheckedTextView>
\ No newline at end of file
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>    <resources>\r\n    <!-- Base application theme. -->\r\n    <style name=\"AppTheme\" parent=\"Theme.AppCompat.DayNight\">\r\n        <!-- Customize your theme here. -->\r\n        <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n        <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n        <item name=\"colorAccent\">@color/colorAccent</item>\r\n    </style>\r\n    <style name=\"AppTheme.NoActionBar\">\r\n        <item name=\"windowActionBar\">false</item>\r\n        <item name=\"windowNoTitle\">true</item>\r\n    </style>\r\n\r\n\r\n\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/values/styles.xml	(date 1622939734341)
@@ -13,4 +13,6 @@
 
 
 
+
+
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main_sign.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/background_color\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/close_activity\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_gravity=\"top|end\"\r\n            android:layout_margin=\"4dp\"\r\n            android:contentDescription=\"@string/closebutton\"\r\n            android:padding=\"5dp\"\r\n            android:src=\"@drawable/close\" />\r\n\r\n        <FrameLayout\r\n            android:id=\"@+id/frameContainer\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:layout_below=\"@+id/close_activity\" />\r\n    </RelativeLayout>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main_sign.xml	(revision 40d8609bce382ed3bdcac20f41703d14588c4476)
+++ app/src/main/res/layout/activity_main_sign.xml	(date 1622926929510)
@@ -6,7 +6,7 @@
     <RelativeLayout
         android:layout_width="match_parent"
         android:layout_height="match_parent"
-        android:background="@color/background_color">
+        android:background="@color/light_Gray">
 
         <ImageView
             android:id="@+id/close_activity"
