Index: app/src/main/java/com/example/graduationproject/Fragments/EditProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.graduationproject.Fragments;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.app.ProgressDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.load.engine.DiskCacheStrategy;\r\nimport com.example.graduationproject.R;\r\nimport com.example.graduationproject.Sign.CustomToast;\r\nimport com.example.graduationproject.Sign.User;\r\nimport com.example.graduationproject.Sign.Utils;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.UserProfileChangeRequest;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.Query;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.database.annotations.Nullable;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.OnProgressListener;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.UUID;\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\n\r\npublic class EditProfileFragment extends Fragment {\r\n    private ImageView editImage;\r\n    private EditText editName, editEmail, editLocation, editPhone;\r\n    private Button updateBtn;\r\n    private FloatingActionButton floatingEditImageBtn;\r\n    public FirebaseAuth auth ;\r\n    String userImage,userName,userEmail,userLocation,userPhone;\r\n\r\n    /////////////osama///////////\r\n    public FirebaseAuth mAuth ;\r\n    public Uri generatedFilePathURI;\r\n    public FirebaseUser firebaseUser;\r\n    public FirebaseDatabase database;\r\n    public DatabaseReference myRef;\r\n    DatabaseReference databaseReference;\r\n    Uri image_uri;\r\n    // instance for firebase storage and StorageReference\r\n    FirebaseStorage storage;\r\n    StorageReference storageReference;\r\n    User user = new User();\r\n    String uid;\r\n    /////////////////////////////////////\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_edit_profile, container, false);\r\n        setHasOptionsMenu(false);\r\n        editImage =view.findViewById(R.id.edit_profile_image);\r\n        floatingEditImageBtn=view.findViewById(R.id.floating_edit_image_btn);\r\n        editName =view.findViewById(R.id.edit_name);\r\n        editEmail =view.findViewById(R.id.edit_email);\r\n        editLocation =view.findViewById(R.id.edit_location);\r\n        editPhone =view.findViewById(R.id.edit_phone);\r\n        updateBtn =view.findViewById(R.id.edit_profile_update_btn);\r\n        auth = FirebaseAuth.getInstance();\r\n        mAuth = auth;\r\n\r\n\r\n        dataBase();\r\n        setListeners();\r\n\r\n\r\n        updateBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                checkValidation();\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n    private void dataBase() {\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        final String id = firebaseUser.getUid();\r\n\r\n        Query query = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(id);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            userName=snapshot.child(\"name\").getValue(String.class);\r\n                            userImage=snapshot.child(\"uri\").getValue(String.class);\r\n                            userEmail=snapshot.child(\"email\").getValue(String.class);\r\n                            userLocation=snapshot.child(\"location\").getValue(String.class);\r\n                            userPhone=snapshot.child(\"phone\").getValue(String.class);\r\n                            editName.setText(userName);\r\n                            editEmail.setText(userEmail);\r\n                            editLocation.setText(userLocation);\r\n                            editPhone.setText(userPhone);\r\n                            Picasso.get().load(userImage).into(editImage);\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateData() {\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        final String id = firebaseUser.getUid();\r\n        final String name = editName.getText().toString();\r\n        final String email = editEmail.getText().toString();\r\n        final String location = editLocation.getText().toString();\r\n        final String phone = editPhone.getText().toString();\r\n        Query query = FirebaseDatabase.getInstance().getReference().child(\"Users\").child(id);\r\n        uploadImage();\r\n        userProfile(name);\r\n        query.addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                if(snapshot!= null){\r\n                    if (snapshot.exists()&& snapshot.getChildrenCount()>0&&snapshot.getValue().toString().length()>0){\r\n                        for (DataSnapshot snapshot1 : snapshot.getChildren()){\r\n                            snapshot.getRef().child(\"name\").setValue(name);\r\n                            snapshot.getRef().child(\"email\").setValue(email);\r\n                            snapshot.getRef().child(\"location\").setValue(location);\r\n                            snapshot.getRef().child(\"phone\").setValue(phone);\r\n                            Toast.makeText(getContext(), \"update\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n    private void checkValidation() {\r\n\r\n        // Get all edittext texts\r\n        String getFullName = editName.getText().toString();\r\n        String getEmailId = editEmail.getText().toString();\r\n        String getMobileNumber = editPhone.getText().toString();\r\n        String getLocation = editLocation.getText().toString();\r\n        // Pattern match for email id\r\n        Pattern p = Pattern.compile(Utils.regEx);\r\n        Matcher m = p.matcher(getEmailId);\r\n\r\n        // Check if all strings are null or not\r\n        if (getFullName.equals(\"\") || getFullName.length() == 0\r\n                || getEmailId.equals(\"\") || getEmailId.length() == 0\r\n                || getMobileNumber.equals(\"\") || getMobileNumber.length() == 0\r\n                || getLocation.equals(\"\") || getLocation.length() == 0\r\n           ) {\r\n            Toast.makeText(getContext(), \"All fields are required.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n\r\n        // Check if email id valid or not\r\n        else if (!m.find()) {\r\n            Toast.makeText(getContext(), \"Your Email Id is Invalid.\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else if (editPhone.length() != 11)\r\n        {\r\n            Toast.makeText(getContext(), \"Mobile should be 11 Numbers\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else {\r\n            updateData();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    ////////////////////// osama ///////////////////////////\r\n\r\n\r\n    // Set Listeners\r\n    private void setListeners() {\r\n        floatingEditImageBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                /*\r\n                Intent takePicture = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                startActivityForResult(takePicture, 0);//zero can be replaced with any action code (called requestCode)\r\n\r\n                Intent pickPhoto = new Intent(Intent.ACTION_PICK,\r\n                        android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(pickPhoto , 1);//one can be replaced with any action code\r\n                */\r\n                SelectProfilePic();\r\n            }\r\n        });\r\n    }\r\n\r\n    // UploadImage method\r\n    public void uploadImage() {\r\n        if (image_uri != null) {\r\n\r\n            // Code for showing progressDialog while uploading\r\n            final ProgressDialog progressDialog\r\n                    = new ProgressDialog(getActivity());\r\n            progressDialog.setTitle(\"Uploading...\");\r\n            progressDialog.show();\r\n            FirebaseUser firebaseUser =mAuth.getCurrentUser();\r\n            uid = firebaseUser.getUid();\r\n\r\n            // Defining the child of storageReference\r\n            storageReference = FirebaseStorage.getInstance().getReference();\r\n            final StorageReference ref\r\n                    = storageReference\r\n                    .child(\"images/\").child(uid + \"/UserImage\");\r\n\r\n            // adding listeners on upload\r\n            // or failure of image\r\n            generatedFilePathURI = image_uri;\r\n            Log.d(\"urlll1\", generatedFilePathURI + \"\");\r\n            UploadTask uploadTask = ref.putFile(image_uri);\r\n            ref.putFile(image_uri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onSuccess(\r\n                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                    // Image uploaded successfully\r\n                    // Dismiss dialog\r\n                    ref.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                        @Override\r\n                        public void onSuccess(Uri uri) {\r\n                            //Now play with downloadPhotoUrl\r\n                            //Store data into Firebase Realtime Database\r\n                            generatedFilePathURI = uri;\r\n                            Log.d(\"urlll\", generatedFilePathURI + \"\");\r\n                            imageToRealFirebase(generatedFilePathURI);\r\n\r\n\r\n                        }\r\n                    });\r\n                                   /* uploadTask.continueWithTask(new Continuation<UploadTask.TaskSnapshot, Task<Uri>>() {\r\n                                        @Override\r\n                                        public Task<Uri> then(@NonNull Task<UploadTask.TaskSnapshot> task) throws Exception {\r\n                                            if (!task.isSuccessful()) {\r\n                                                throw task.getException();\r\n\r\n                                            }\r\n                                            // Continue with the task to get the download URL\r\n                                            return ref.getDownloadUrl();\r\n                                        }\r\n                                    }).addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n                                        @Override\r\n                                        public void onComplete(@NonNull Task<Uri> task) {\r\n                                            if (task.isSuccessful()) {\r\n\r\n                                                generatedFilePathURI = task.getResult();\r\n                                                Log.d(\"urlll\",generatedFilePathURI + \"\");\r\n\r\n\r\n                                            }\r\n                                        }\r\n                                    });\r\n\r\n                                    */\r\n                    progressDialog.dismiss();\r\n                    Toast.makeText(getActivity(), \"Image Uploaded!!\", Toast.LENGTH_SHORT).show();\r\n\r\n\r\n                }\r\n            })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n\r\n                            // Error, Image not uploaded\r\n                            progressDialog.dismiss();\r\n                            Toast\r\n                                    .makeText(getActivity(),\r\n                                            \"Failed \" + e.getMessage(),\r\n                                            Toast.LENGTH_SHORT)\r\n                                    .show();\r\n                        }\r\n                    })\r\n                    .addOnProgressListener(\r\n                            new OnProgressListener<UploadTask.TaskSnapshot>() {\r\n\r\n                                // Progress Listener for loading\r\n                                // percentage on the dialog box\r\n                                @Override\r\n                                public void onProgress(\r\n                                        UploadTask.TaskSnapshot taskSnapshot) {\r\n                                    double progress\r\n                                            = (100.0\r\n                                            * taskSnapshot.getBytesTransferred()\r\n                                            / taskSnapshot.getTotalByteCount());\r\n                                    progressDialog.setMessage(\r\n                                            \"Uploaded \"\r\n                                                    + (int) progress + \"%\");\r\n                                }\r\n                            });\r\n        }\r\n    }\r\n\r\n\r\n    /*-------- Below Code is for selecting image from galary or camera -----------*/\r\n    private void SelectProfilePic() {\r\n        final CharSequence[] options = {\"Take Photo\", \"Choose from Gallery\", \"Cancel\"};\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n        builder.setTitle(\"Add Photo!\");\r\n        builder.setItems(options, new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int item) {\r\n                if (options[item].equals(\"Take Photo\")) {\r\n                    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\r\n                        if (getActivity().checkSelfPermission(Manifest.permission.CAMERA) == PackageManager.PERMISSION_DENIED ||\r\n                                getActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) == PackageManager.PERMISSION_DENIED) {\r\n                            String[] permission = {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};\r\n                            requestPermissions(permission, 1000);\r\n                        } else {\r\n                            openCamera();\r\n                        }\r\n                    } else {\r\n                        openCamera();\r\n                    }\r\n                } else if (options[item].equals(\"Choose from Gallery\")) {\r\n\r\n                    Intent intent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.INTERNAL_CONTENT_URI);\r\n\r\n                    startActivityForResult(intent, 2);\r\n\r\n                } else if (options[item].equals(\"Cancel\")) {\r\n\r\n                    dialog.dismiss();\r\n\r\n                }\r\n            }\r\n        });\r\n        builder.show();\r\n\r\n    }\r\n\r\n    private void openCamera() {\r\n        ContentValues values = new ContentValues();\r\n        values.put(MediaStore.Images.Media.TITLE, \"New Picture\");\r\n        values.put(MediaStore.Images.Media.DESCRIPTION, \"From Camera\");\r\n        image_uri = getActivity().getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n\r\n        //Camera intent\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, image_uri);\r\n        startActivityForResult(takePictureIntent, 1);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch (requestCode) {\r\n            case 1000:\r\n                if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                    openCamera();\r\n                } else {\r\n                    //permisiion from pop up was denied.\r\n                    Toast.makeText(getActivity(), \"Permission Denied...\", Toast.LENGTH_LONG).show();\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        // Result code is RESULT_OK only if the user selects an Image\r\n        if (resultCode == Activity.RESULT_OK) {\r\n            switch (requestCode) {\r\n                case 1:\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(editImage);\r\n                    //Toast.makeText(getActivity(),\"case 1 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n                case 2:\r\n                    //data.getData returns the content URI for the selected Image\r\n                    image_uri = data.getData();\r\n                    //user_profile.setImageURI(image_uri);\r\n                    Glide.with(getActivity())\r\n                            .load(image_uri)\r\n                            .centerCrop()\r\n                            .diskCacheStrategy(DiskCacheStrategy.NONE)\r\n                            .skipMemoryCache(true)\r\n                            .placeholder(R.drawable.person_24)\r\n                            .into(editImage);\r\n                    //Toast.makeText(getActivity(),\"case 2 \" ,Toast.LENGTH_SHORT).show();\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    ///////////////////save image url in realtime database /////////////\r\n    public void imageToRealFirebase(Uri uri) {\r\n        user.setUri(uri);\r\n        FirebaseUser firebaseUser =auth.getCurrentUser();\r\n        final String uid = firebaseUser.getUid();\r\n\r\n        database = FirebaseDatabase.getInstance();\r\n        myRef = database.getReference(\"Users\").child(uid);\r\n        myRef.child(\"uri\").setValue(user.getUri().toString());\r\n    }\r\n\r\n    /*----------For saving image and user name in Auth Firebase Database-------*/\r\n    public void userProfile(String name) {\r\n        firebaseUser = mAuth.getCurrentUser();\r\n        if (firebaseUser != null) {\r\n            UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()\r\n                    .setDisplayName(name).setPhotoUri(generatedFilePathURI).build();\r\n            firebaseUser.updateProfile(profileUpdates).addOnCompleteListener(getActivity(), new OnCompleteListener<Void>() {\r\n                @Override\r\n                public void onComplete(@NonNull Task<Void> task) {\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Fragments/EditProfileFragment.java	(revision 49a56cb5046df531dcfa0388f56ebfc0c45d6506)
+++ app/src/main/java/com/example/graduationproject/Fragments/EditProfileFragment.java	(date 1622085247505)
@@ -3,6 +3,7 @@
 import android.Manifest;
 import android.app.Activity;
 import android.app.AlertDialog;
+import android.app.FragmentManager;
 import android.app.ProgressDialog;
 import android.content.ContentValues;
 import android.content.DialogInterface;
@@ -13,6 +14,8 @@
 import android.os.Bundle;
 
 import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.app.ActivityCompat;
 import androidx.fragment.app.Fragment;
 
 import android.provider.MediaStore;
@@ -23,6 +26,7 @@
 import android.widget.Button;
 import android.widget.EditText;
 import android.widget.ImageView;
+import android.widget.TextView;
 import android.widget.Toast;
 
 import com.bumptech.glide.Glide;
@@ -58,10 +62,11 @@
 
 import static android.app.Activity.RESULT_OK;
 
-public class EditProfileFragment extends Fragment {
+public class EditProfileFragment extends Fragment implements View.OnClickListener {
     private ImageView editImage;
     private EditText editName, editEmail, editLocation, editPhone;
     private Button updateBtn;
+    private TextView editPassword;
     private FloatingActionButton floatingEditImageBtn;
     public FirebaseAuth auth ;
     String userImage,userName,userEmail,userLocation,userPhone;
@@ -94,6 +99,8 @@
         editLocation =view.findViewById(R.id.edit_location);
         editPhone =view.findViewById(R.id.edit_phone);
         updateBtn =view.findViewById(R.id.edit_profile_update_btn);
+        editPassword=view.findViewById(R.id.edit_password_txt);
+        editPassword.setOnClickListener(this);
         auth = FirebaseAuth.getInstance();
         mAuth = auth;
 
@@ -462,6 +469,14 @@
         }
     }
 
+    @Override
+    public void onClick(View view) {
+      AppCompatActivity activity =  (AppCompatActivity)view.getContext();
+        activity.getSupportFragmentManager().beginTransaction().replace(R.id.fragment_container,new ChangePasswordFragment()).commit();
+
+    }
+
+
     ///////////////////////////////////////////////////////////////////////
 
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"false\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 49a56cb5046df531dcfa0388f56ebfc0c45d6506)
+++ .idea/misc.xml	(date 1622080852913)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="false" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <bytecodeTargetLevel target=\"11\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/compiler.xml	(revision 49a56cb5046df531dcfa0388f56ebfc0c45d6506)
+++ .idea/compiler.xml	(date 1622080853030)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="CompilerConfiguration">
-    <bytecodeTargetLevel target="11" />
+    <bytecodeTargetLevel target="1.8" />
   </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_edit_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:gravity=\"center_horizontal\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".Fragments.EditProfileFragment\">\r\n    <RelativeLayout\r\n        android:layout_width=\"180dp\"\r\n        android:layout_height=\"180dp\"\r\n        android:layout_marginTop=\"30dp\">\r\n    <de.hdodenhof.circleimageview.CircleImageView\r\n        android:id=\"@+id/edit_profile_image\"\r\n        android:layout_width=\"180dp\"\r\n        android:layout_height=\"180dp\"\r\n        android:background=\"@drawable/doctor_icon\"\r\n        android:scaleType=\"centerCrop\"\r\n        />\r\n        <com.google.android.material.floatingactionbutton.FloatingActionButton\r\n            android:id=\"@+id/floating_edit_image_btn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:src=\"@drawable/ic_baseline_edit_24\"\r\n            android:layout_alignParentBottom=\"true\"\r\n            android:layout_alignParentEnd=\"true\"\r\n            android:layout_alignParentRight=\"true\"\r\n            android:layout_marginBottom=\"0dp\"\r\n            android:layout_marginEnd=\"0dp\"\r\n            android:layout_marginRight=\"0dp\"/>\r\n    </RelativeLayout>\r\n    <EditText\r\n        android:id=\"@+id/edit_name\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"40dp\"\r\n        android:background=\"@drawable/rounded_corner\"\r\n        android:elevation=\"10dp\"\r\n        android:hint=\"Name\"\r\n        android:paddingLeft=\"30dp\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_email\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"@drawable/rounded_corner\"\r\n        android:elevation=\"10dp\"\r\n        android:hint=\"E-mail\"\r\n        android:paddingLeft=\"30dp\"\r\n        android:scrollbarSize=\"@dimen/_400sdp\"\r\n        android:inputType=\"textEmailAddress\"/>\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_location\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"@drawable/rounded_corner\"\r\n        android:elevation=\"10dp\"\r\n        android:hint=\"Location\"\r\n        android:paddingLeft=\"30dp\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_phone\"\r\n        android:layout_width=\"300dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"10dp\"\r\n        android:background=\"@drawable/rounded_corner\"\r\n        android:elevation=\"10dp\"\r\n        android:hint=\"Phone\"\r\n        android:paddingLeft=\"30dp\"\r\n        android:inputType=\"phone\"/>\r\n\r\n    <Button\r\n        android:id=\"@+id/edit_profile_update_btn\"\r\n        android:layout_width=\"200dp\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"50dp\"\r\n        android:layout_marginBottom=\"200dp\"\r\n        android:background=\"@drawable/rounded_corner\"\r\n        android:backgroundTint=\"@color/color\"\r\n        android:text=\"Update\"\r\n        android:textSize=\"20dp\" />\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_edit_profile.xml	(revision 49a56cb5046df531dcfa0388f56ebfc0c45d6506)
+++ app/src/main/res/layout/fragment_edit_profile.xml	(date 1622083286474)
@@ -49,6 +49,7 @@
         android:hint="E-mail"
         android:paddingLeft="30dp"
         android:scrollbarSize="@dimen/_400sdp"
+
         android:inputType="textEmailAddress"/>
 
     <EditText
@@ -71,12 +72,21 @@
         android:hint="Phone"
         android:paddingLeft="30dp"
         android:inputType="phone"/>
+    <TextView
+        android:id="@+id/edit_password_txt"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Change Password"
+        android:textSize="@dimen/_13sdp"
+        android:textColor="@color/color"
+        android:layout_marginTop="@dimen/_10sdp"
+        android:layout_marginLeft="@dimen/_55sdp"/>
 
     <Button
         android:id="@+id/edit_profile_update_btn"
         android:layout_width="200dp"
         android:layout_height="50dp"
-        android:layout_marginTop="50dp"
+        android:layout_marginTop="20dp"
         android:layout_marginBottom="200dp"
         android:background="@drawable/rounded_corner"
         android:backgroundTint="@color/color"
Index: app/src/main/java/com/example/graduationproject/Notification/APIService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/APIService.java	(date 1621990219347)
+++ app/src/main/java/com/example/graduationproject/Notification/APIService.java	(date 1621990219347)
@@ -0,0 +1,17 @@
+package com.example.graduationproject.Notification;
+
+import retrofit2.Call;
+import retrofit2.http.Body;
+import retrofit2.http.Headers;
+import retrofit2.http.POST;
+
+public interface APIService {
+    @Headers(
+        {
+            "Content-Type:application/json",
+            "Authorization:key=AAAAvkept9I:APA91bGLUASRrfj3pxc97dGKBc31OZldaejWcu0M1Vqk-shRZRGzhbpnO5oRCdBHteEbd05sKa3jOBAplMAUaympIQcIg-XG6PIHhGxFor48I_UvkqEwcth_jo8eFCVhOJT6mbrv6GQM"
+        }
+    )
+    @POST("fcm/send")
+    Call<MyResponse> sendNotification(@Body NotificationSender body);
+}
Index: app/src/main/java/com/example/graduationproject/Notification/Token.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/Token.java	(date 1621990219392)
+++ app/src/main/java/com/example/graduationproject/Notification/Token.java	(date 1621990219392)
@@ -0,0 +1,20 @@
+package com.example.graduationproject.Notification;
+
+public class Token {
+    String token;
+
+    public Token(String token) {
+        this.token = token;
+    }
+
+    public Token() {
+    }
+
+    public String getToken() {
+        return token;
+    }
+
+    public void setToken(String token) {
+        this.token = token;
+    }
+}
Index: app/src/main/java/com/example/graduationproject/Notification/MyFirebaseIdService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/MyFirebaseIdService.java	(date 1621990219353)
+++ app/src/main/java/com/example/graduationproject/Notification/MyFirebaseIdService.java	(date 1621990219353)
@@ -0,0 +1,27 @@
+package com.example.graduationproject.Notification;
+
+import androidx.annotation.NonNull;
+
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.iid.FirebaseInstanceId;
+import com.google.firebase.messaging.FirebaseMessagingService;
+
+public class MyFirebaseIdService extends FirebaseMessagingService {
+    @Override
+    public void onNewToken(@NonNull String s) {
+        super.onNewToken(s);
+        FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
+        String refreshToken= FirebaseInstanceId.getInstance().getToken();
+        if (firebaseUser != null){
+            updateToken(refreshToken);
+        }
+
+    }
+    private void updateToken(String refreshToken) {
+        FirebaseUser firebaseUser = FirebaseAuth.getInstance().getCurrentUser();
+        Token token1 =new Token(refreshToken);
+        FirebaseDatabase.getInstance().getReference("Tokens").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(token1);
+    }
+}
Index: app/src/main/java/com/example/graduationproject/Notification/Data.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/Data.java	(date 1621990219496)
+++ app/src/main/java/com/example/graduationproject/Notification/Data.java	(date 1621990219496)
@@ -0,0 +1,29 @@
+package com.example.graduationproject.Notification;
+
+public class Data {
+    private String Title, message;
+
+    public Data(String title, String message) {
+        this.Title = title;
+        this.message = message;
+    }
+
+    public Data() {
+    }
+
+    public String getTitle() {  
+        return Title;
+    }
+
+    public void setTitle(String title) {
+        this.Title = title;
+    }
+
+    public String getMessages() {
+        return message;
+    }
+
+    public void setMessages(String messages) {
+        this.message = messages;
+    }
+}
Index: app/src/main/java/com/example/graduationproject/Notification/MyFirebaseMessagingService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/MyFirebaseMessagingService.java	(date 1621990219407)
+++ app/src/main/java/com/example/graduationproject/Notification/MyFirebaseMessagingService.java	(date 1621990219407)
@@ -0,0 +1,42 @@
+package com.example.graduationproject.Notification;
+
+import android.app.NotificationChannel;
+import android.app.NotificationManager;
+import android.content.Context;
+import android.os.Build;
+import android.util.Log;
+
+import androidx.annotation.NonNull;
+import androidx.core.app.NotificationCompat;
+
+import com.example.graduationproject.R;
+import com.google.firebase.messaging.FirebaseMessagingService;
+import com.google.firebase.messaging.RemoteMessage;
+
+public class MyFirebaseMessagingService extends FirebaseMessagingService {
+    String title,message;
+  String CHANNAL_ID="good";
+    @Override
+    public void onMessageReceived(@NonNull RemoteMessage remoteMessage) {
+        super.onMessageReceived(remoteMessage);
+        title=remoteMessage.getData().get("Title");
+        message=remoteMessage.getData().get("Message");
+
+        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplicationContext())
+                .setSmallIcon(R.drawable.ic_baseline_notifications_24)
+                .setContentTitle(title)
+                .setContentText(message);
+       /* NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+        manager.notify(0,builder.build());
+*/
+
+     if(Build.VERSION.SDK_INT>=Build.VERSION_CODES.O){
+        NotificationChannel notificationChannel = new NotificationChannel(CHANNAL_ID,"notification",NotificationManager.IMPORTANCE_DEFAULT);
+        NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
+        manager.createNotificationChannel(notificationChannel);
+        manager.notify(0,builder.build());
+            Log.i("Gouda", "onMessageReceived: ");
+    }
+   }
+
+}
Index: app/src/main/java/com/example/graduationproject/Notification/MyResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/MyResponse.java	(date 1621990219541)
+++ app/src/main/java/com/example/graduationproject/Notification/MyResponse.java	(date 1621990219541)
@@ -0,0 +1,5 @@
+package com.example.graduationproject.Notification;
+
+public class MyResponse {
+    public int success;
+}
Index: app/src/main/java/com/example/graduationproject/Notification/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/Client.java	(date 1621990219514)
+++ app/src/main/java/com/example/graduationproject/Notification/Client.java	(date 1621990219514)
@@ -0,0 +1,14 @@
+package com.example.graduationproject.Notification;
+
+import retrofit2.Retrofit;
+import retrofit2.converter.gson.GsonConverterFactory;
+
+public class Client {
+    private static Retrofit retrofit=null;
+    public static Retrofit getClient(String url){
+        if (retrofit==null){
+            retrofit = new  Retrofit.Builder().baseUrl(url).addConverterFactory(GsonConverterFactory.create()).build();
+        }
+        return retrofit;
+    }
+}
Index: app/src/main/java/com/example/graduationproject/Activities/SendNotif.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Activities/SendNotif.java	(date 1621990219569)
+++ app/src/main/java/com/example/graduationproject/Activities/SendNotif.java	(date 1621990219569)
@@ -0,0 +1,96 @@
+package com.example.graduationproject.Activities;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.example.graduationproject.Notification.APIService;
+import com.example.graduationproject.Notification.Client;
+import com.example.graduationproject.Notification.Data;
+import com.example.graduationproject.Notification.MyResponse;
+import com.example.graduationproject.Notification.NotificationSender;
+import com.example.graduationproject.Notification.Token;
+import com.example.graduationproject.R;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.google.firebase.iid.FirebaseInstanceId;
+
+import retrofit2.Call;
+import retrofit2.Callback;
+import retrofit2.Response;
+
+public class SendNotif extends AppCompatActivity {
+    EditText UserTB,Title,Message;
+    Button send;
+    private APIService apiService;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_send_notif);
+        UserTB=findViewById(R.id.UserID);
+        Title=findViewById(R.id.Title);
+        Message=findViewById(R.id.Messages);
+        send=findViewById(R.id.button2);
+        apiService= Client.getClient("https://fcm.googleapis.com/").create(APIService.class);
+        send.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                FirebaseDatabase.getInstance().getReference().child("Tokens").child(UserTB.getText().toString().trim()).child("token")
+                        .addListenerForSingleValueEvent(new ValueEventListener() {
+                            @Override
+                            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                                String userToken=snapshot.getValue(String.class);
+                                sendNotifications(userToken,Title.getText().toString().trim(),Message.getText().toString().trim());
+                                Log.i("TAG", "onDataChange: ");
+                            }
+
+                            @Override
+                            public void onCancelled(@NonNull DatabaseError error) {
+
+                            }
+                        });
+
+            }
+        });
+        UpdateToken();
+    }
+    private void UpdateToken() {
+        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+        String refreshToken= FirebaseInstanceId.getInstance().getToken();
+        Token token =new Token(refreshToken);
+        FirebaseDatabase.getInstance().getReference("Tokens").child(FirebaseAuth.getInstance().getCurrentUser().getUid()).setValue(token);
+    }
+    private void sendNotifications(String userToken, String title, String message) {
+        Data data =new Data(title,message);
+        NotificationSender notificationSender = new NotificationSender(data,userToken);
+        Log.i("TAG", "sendNotifications: ");
+        apiService.sendNotification(notificationSender).enqueue(new Callback<MyResponse>()
+        {
+            @Override
+            public void onResponse(Call<MyResponse> call, Response<MyResponse> response) {
+                if (response.code()==200){
+                    if (response.body().success!=1){
+                        Toast.makeText(getApplicationContext(), "Failed", Toast.LENGTH_LONG).show();
+                    }
+                }
+            }
+
+            @Override
+            public void onFailure(Call<MyResponse> call, Throwable t) {
+
+            }
+        });
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/graduationproject/Notification/NotificationSender.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/graduationproject/Notification/NotificationSender.java	(date 1621990219559)
+++ app/src/main/java/com/example/graduationproject/Notification/NotificationSender.java	(date 1621990219559)
@@ -0,0 +1,14 @@
+package com.example.graduationproject.Notification;
+
+public class NotificationSender {
+    public Data data;
+    public String to;
+
+    public NotificationSender(Data data, String to) {
+        this.data = data;
+        this.to = to;
+    }
+
+    public NotificationSender() {
+    }
+}
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_20_01_2021_07_05___Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_20_01_2021_07_05___Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_21_05_2021_06_47___Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_21_05_2021_06_47___Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_21_05_2021_07_11___Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_21_05_2021_07_11___Default_Changelist_.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-05-22_12_18_AM__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-05-22_12_18_AM__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_2021-05-22_12_18_AM__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_2021-05-22_12_18_AM__Default_Changelist_.xml
